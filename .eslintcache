[{"C:\\Users\\mopat\\dsav-363\\src\\index.js":"1","C:\\Users\\mopat\\dsav-363\\src\\App.js":"2","C:\\Users\\mopat\\dsav-363\\src\\Crypto\\Crypto.js":"3","C:\\Users\\mopat\\dsav-363\\src\\Portfolio\\Portfolio.js":"4","C:\\Users\\mopat\\dsav-363\\src\\Investors\\Investor.js":"5","C:\\Users\\mopat\\dsav-363\\src\\GameSession\\GameSession.js":"6","C:\\Users\\mopat\\dsav-363\\src\\Redux\\index.js":"7","C:\\Users\\mopat\\dsav-363\\src\\Login\\Login.js":"8","C:\\Users\\mopat\\dsav-363\\src\\firebase.js":"9","C:\\Users\\mopat\\dsav-363\\src\\CreateGame\\CreateGame.js":"10","C:\\Users\\mopat\\dsav-363\\src\\Profile\\Profile.js":"11","C:\\Users\\mopat\\dsav-363\\src\\FindGames\\FindGames.js":"12","C:\\Users\\mopat\\dsav-363\\src\\MyGames\\MyGames.js":"13","C:\\Users\\mopat\\dsav-363\\src\\test\\test.js":"14","C:\\Users\\mopat\\dsav-363\\src\\GameModal\\GameModal.js":"15","C:\\Users\\mopat\\dsav-363\\src\\reportWebVitals.js":"16"},{"size":581,"mtime":1614314983462,"results":"17","hashOfConfig":"18"},{"size":2956,"mtime":1619677293654,"results":"19","hashOfConfig":"18"},{"size":2037,"mtime":1618731502998,"results":"20","hashOfConfig":"21"},{"size":8225,"mtime":1619679847247,"results":"22","hashOfConfig":"18"},{"size":900,"mtime":1618731484273,"results":"23","hashOfConfig":"21"},{"size":724,"mtime":1618731491726,"results":"24","hashOfConfig":"21"},{"size":800,"mtime":1619313807846,"results":"25","hashOfConfig":"18"},{"size":3687,"mtime":1619681734360,"results":"26","hashOfConfig":"18"},{"size":266,"mtime":1619681997621,"results":"27","hashOfConfig":"18"},{"size":4205,"mtime":1619681870240,"results":"28","hashOfConfig":"18"},{"size":7323,"mtime":1619587646384,"results":"29","hashOfConfig":"18"},{"size":6601,"mtime":1619507968696,"results":"30","hashOfConfig":"18"},{"size":6932,"mtime":1619505723713,"results":"31","hashOfConfig":"18"},{"size":6285,"mtime":1616119689995,"results":"32","hashOfConfig":"18"},{"size":12642,"mtime":1619510642796,"results":"33","hashOfConfig":"18"},{"size":362,"mtime":1619414459128,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"o959en",{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},"my667k",{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"37"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"37"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"37"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\mopat\\dsav-363\\src\\index.js",[],["79","80"],"C:\\Users\\mopat\\dsav-363\\src\\App.js",["81","82"],"import React, {useEffect} from 'react'\r\nimport \"./App.css\"\r\nimport Login from \"./Login/Login\"\r\nimport {connect} from \"react-redux\"\r\nimport CreateGame from './CreateGame/CreateGame'\r\nimport Profile from \"./Profile/Profile\"\r\nimport FindGames from \"./FindGames/FindGames\"\r\nimport MyGames from \"./MyGames/MyGames\"\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\"\r\nimport Test from \"./test/test\"\r\nimport store from \"./Redux/index\"\r\nimport {auth, db} from \"./firebase.js\"\r\n\r\n\r\n\r\nfunction App({ username, userInfo }) {\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) { \r\n        let name = user.email.split(\"@\")   \r\n        var docRef = db.collection(\"users\").doc(name[0]);\r\n        \r\n        docRef.get().then((doc) => {\r\n          store.dispatch({  \r\n              type: \"ADD_POST\",\r\n              payload: {\r\n                  username: name[0],\r\n                  email: user.email,\r\n                  userInfo: user,\r\n                  MyGames: doc.data().current_games,\r\n                  PreviousGames: doc.data().previous_games\r\n              } \r\n          }) \r\n        })\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className = \"App\">\r\n      { username ? (\r\n        <Router>\r\n          <div>\r\n            <div id=\"blurry-filter\"></div>\r\n            <header>\r\n              <div>\r\n                <article id=\"title\"><span className=\"parent\" style={{color: \"white\"}}>Fantasy </span><span className=\"name\" style={{color: \"#4089F6\"}}>Markets</span><br/>\r\n                  <span style={{color: \"white\"}}>Strategize, Invest, and take your portfolio <em>to the moon!</em></span>\r\n                </article>\r\n                \r\n                <nav>\r\n                  <ul id = \"folders\">\r\n                    <li><Link to=\"/find\" style={{color:\"white\"}}>Find a Game</Link></li>\r\n                    <li><Link to=\"/games\" style={{color:\"white\"}}>My Games</Link></li>\r\n                    <li><Link to=\"/create\" style={{color:\"white\"}}>Create Game</Link></li>\r\n                  </ul>\r\n                </nav>\r\n                \r\n                <Link to=\"/profile\"> \r\n                  <a>\r\n                    <img className=\"home-pro-pic\" alt=\"profile pic\" src={userInfo.photoURL} />\r\n                  </a>\r\n                </Link>    \r\n              </div>\r\n\r\n              <hr id=\"header-line\" />\r\n            </header>\r\n\r\n            <Route path=\"/\" />\r\n            <Route path=\"/find\"  component={FindGames} />\r\n            <Route path=\"/games\"  component={MyGames} />\r\n            <Route path=\"/create\"  component={CreateGame} />\r\n            <Route path=\"/profile\"  component={Profile} />      \r\n\r\n          </div>\r\n        </Router>\r\n      ) : (\r\n        <div>\r\n          <Login />\r\n        </div>\r\n      )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  username: state.username,\r\n  userInfo: state.userInfo\r\n})\r\n\r\nexport default connect(mapStateToProps)(App)\r\n\r\n","C:\\Users\\mopat\\dsav-363\\src\\Crypto\\Crypto.js",["83","84"],"import React, {useState, useEffect, prevState} from 'react'\r\nimport \"./Crypto.css\"\r\nconst rp = require('request-promise');\r\n// uri: 'https://cors-anywhere.herokuapp.com/https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest'\r\n\r\n\r\nfunction Crypto({portfolio}) {\r\n    const [price, setPrice] = useState(1)\r\n    const [coinAmount, setCoinAmount] = useState(1)\r\n    //const [prices, setPrices] = useState([0])\r\n\r\n    function getCoinInfo(currency, amount){\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            uri: 'https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest',\r\n            qs: {\r\n              'slug': currency,\r\n            },\r\n            \r\n            headers: {\r\n              'X-CMC_PRO_API_KEY': \"1d62807d-b858-4715-9a04-5fdfb1414cb0\"\r\n            },\r\n            json: true,\r\n            gzip: true\r\n          };\r\n          \r\n    \r\n          rp(requestOptions).then(response => {\r\n            console.log('API call response:', response)\r\n            setPrice(response.data[Object.keys(response.data)[0]].quote.USD.price)\r\n            //setPrices([...prices, price])\r\n            console.log(Number(amount) / price)\r\n            setCoinAmount(Math.round((Number(amount) / price) * 10000) / 10000)\r\n          }).catch((err) => {\r\n            console.log('API call error:', err.message)\r\n            setCoinAmount(1)\r\n          })\r\n          return coinAmount\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {Object.keys(portfolio).map(currency => (\r\n                <div>\r\n                    <div className = \"coin-info\">\r\n                        <p className=\"item\">Name: {currency}</p>\r\n                        <p className=\"item\">Amount Invested: ${portfolio[currency]} USD</p>\r\n                        <p className=\"item\">Current position: <strong>{getCoinInfo(currency, portfolio[currency])} {currency}</strong></p>\r\n                    </div>       \r\n                </div>\r\n            ))\r\n            }    \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Crypto\r\n\r\n\r\n\r\n",["85","86"],"C:\\Users\\mopat\\dsav-363\\src\\Portfolio\\Portfolio.js",["87","88","89"],"import React, {useState, useEffect} from 'react'\r\nimport \"./Portfolio.css\"\r\nimport { connect } from 'react-redux'\r\nimport { db } from \"../firebase\"\r\nimport firebase from \"firebase\"\r\nimport store from \".././Redux/index\"\r\nconst rp = require('request-promise');\r\n\r\n\r\nfunction EditPortfolio({username, gameId, portfolio}) {\r\n    const [assets, setAssets] = useState({})\r\n    const [cashInvested, setCashInvested] = useState({})\r\n    const [coinName, setCoinName] = useState(\"\")\r\n    const [coinAmount, setCoinAmount] = useState(0)\r\n    const [cash, setCash] = useState(Number(portfolio[\"cash\"]))\r\n\r\n    async function addCoin(e){\r\n        if(cash - coinAmount < 0){\r\n            alert(\"Not enough funds remaining\")\r\n            return\r\n        }\r\n        if(Object.keys(assets).length >= 5){\r\n            alert(\"You are only allowed a maximum of 5 coins. Please rebalance your portfolio if you wish to use your remaining cash.\")\r\n            return\r\n        }\r\n        else{\r\n            let name = coinName\r\n            let convertedPrice = 0\r\n            db.collection(\"coin_prices\").doc(name).get().then((doc) => {\r\n                 let currentSeconds = Math.round(new Date().getTime());\r\n                // checks if one day has passed. If not, do NOT update prices. (Can be backup just in case python script is down)\r\n                if(doc.exists && (currentSeconds - doc.data().updatedAt <= 86400000)){\r\n                    convertedPrice = coinAmount / doc.data().value\r\n\r\n                    setCashInvested({...cashInvested, [name]: Number(coinAmount)}) \r\n                    setAssets({...assets, [name]: Number(convertedPrice)}) \r\n                    setCash(cash - Number(coinAmount))\r\n                }\r\n                else {\r\n                    if(convertedPrice === 0){\r\n                        const requestOptions = {\r\n                            method: 'GET',\r\n                            uri: 'https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest',\r\n                            qs: {\r\n                            'slug': name,\r\n                            },\r\n                            \r\n                            headers: {\r\n                            'X-CMC_PRO_API_KEY': \"1d62807d-b858-4715-9a04-5fdfb1414cb0\"\r\n                            },\r\n                            json: true,\r\n                            gzip: true\r\n                        };\r\n                        \r\n                        rp(requestOptions).then(response => {\r\n                            console.log('API call response:', response)\r\n\r\n                            setTimeout(() => {\r\n                            }, 1000)\r\n\r\n                            db.collection(\"coin_prices\").doc(name).set({ value: Number(response.data[Object.keys(response.data)[0]].quote.USD.price * 10000) / 10000, updatedAt: Math.round(new Date().getTime()) })\r\n                            convertedPrice = Math.round((Number(coinAmount) / response.data[Object.keys(response.data)[0]].quote.USD.price) * 10000) / 10000\r\n                            setCashInvested({...cashInvested, [name]: Number(coinAmount)}) \r\n                            setAssets({...assets, [name]: Number(convertedPrice)}) \r\n                            setCash(cash - Number(coinAmount))\r\n\r\n                        }).catch((err) => {\r\n                            console.log('API call error:', err.message)\r\n                            alert(\"Please input a valid coin. (Check your spelling!)\")\r\n                        })\r\n            \r\n                    }\r\n                }\r\n            })\r\n\r\n            setCoinName(\"\")\r\n            setCoinAmount(0)            \r\n        }\r\n    }\r\n\r\n    function submitPortfolio(){\r\n        assets[\"cash\"] = cash\r\n        assets[\"total\"] = Number(portfolio[\"cash\"])\r\n        assets[\"canEdit\"] = false\r\n        db.collection(\"joinable_games\").doc(gameId).set({[username]: assets}, {merge : true}).then(() => {\r\n            setTimeout(() => {\r\n            \r\n            }, 3000);\r\n    \r\n            window.location.reload()\r\n        }).catch((error) => (\r\n            console.log(error)\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div className = \"portfolio\">           \r\n            <h1><u className = \"title\">Finalize Your Portfolio</u></h1>\r\n            <div className = \"add-coin\">\r\n                <p>Coins remaining: {5 - Object.keys(assets).length} </p>\r\n                <p>Funds remaining: {cash}</p>\r\n                <button className= \"addCoinBtn\" type = \"submit\" onClick = {addCoin}> Add Coin </button>\r\n            </div>\r\n            <div className=\"inputFields\">\r\n                <input type = \"text\" placeholder = \"Full coin name(e.g. bitcoin)\"  onChange = {(e) => setCoinName(e.target.value.toLowerCase())}></input>\r\n                <input type = \"number\" placeholder = \"Amount in USD\" onChange = {(e) => setCoinAmount(e.target.value)}></input>        \r\n            </div>\r\n\r\n            {Object.keys(assets).map(currency => (\r\n                <div>\r\n                    <div className = \"coin-info\">\r\n                        <span className=\"item\">Name: {currency}</span>\r\n                        <span className=\"item\">Amount Invested: ${cashInvested[currency]} USD</span>\r\n                        <span className=\"item\">Current position: <strong>{Math.round(assets[currency] * 10000) / 10000} {currency}</strong></span>\r\n                    </div>          \r\n                </div> \r\n            ))\r\n            }   \r\n            <span className=\"textWarning\">Important: You can only finalize your portfolio once! Choose wisely...</span>          \r\n \r\n            <button className=\"submitBtn\" onClick = {submitPortfolio}>Submit Portfolio</button>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    username: state.username,\r\n    userInfo: state.userInfo\r\n})\r\n\r\n\r\nexport default (connect)(mapStateToProps)(EditPortfolio)\r\n\r\n\r\nexport function ViewPortfolio({dailyCoinPrices, coinNames, username, portfolio, tokens, rank}){\r\n    useEffect(() => {\r\n        console.log(dailyCoinPrices)\r\n        console.log(coinNames)\r\n        console.log(username)\r\n        console.log(portfolio)\r\n        console.log(tokens)\r\n        console.log(rank)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n    }, [tokens])\r\n\r\n\r\n    return(\r\n        <div className = \"viewPortfolio\">           \r\n            <h1><u className = \"title\">{username}'s Portfolio</u></h1>\r\n            <br />\r\n            <div>\r\n                {rank === 1 ? (\r\n                    <h1 style={{color: \"goldenrod\"}}>{rank}st Place</h1>\r\n                ) : rank === 2 ? (\r\n                    <h1 style={{color: \"silver\"}}>{rank}nd Place</h1>\r\n                ) : rank === 3 ? (\r\n                    <h1 style={{color: \"brown\"}}>{rank}rd Place</h1>\r\n                ) : (\r\n                    <h1 style={{color: \"black\"}}>{rank}rd Place</h1>\r\n                )\r\n                }\r\n            </div>\r\n            <br />\r\n\r\n            <div className=\"centerText\">\r\n                <h3>Total Account Value: </h3>\r\n                <span className=\"totalVal\"><strong>${Math.round((Number(portfolio[\"total\"]) * 100)) / 100}</strong></span>\r\n            </div>\r\n\r\n            <div className=\"background-color\">\r\n                {Object.keys(portfolio).map((coin) => (\r\n                    coin === \"canEdit\" || coin === \"total\" ? (\r\n                        <div></div>\r\n                    ) : (                \r\n                        <div className=\"assets\">\r\n                            <p>Asset: <strong>{coin}</strong> </p>\r\n                            <p> Amount: <strong>{Math.round((Number(portfolio[coin]) * 10000)) / 10000} {coin}</strong> </p>\r\n                            { coin === \"cash\" ? (\r\n                                <p> Amount in USD: <strong>${portfolio[coin]}</strong> </p>\r\n                            ) : (\r\n                                <p> Amount in USD: <strong>${Math.round((portfolio[coin] * dailyCoinPrices[coinNames.indexOf(coin)]) * 100) / 100}</strong> </p>         \r\n                            )    \r\n                            }\r\n                        </div>         \r\n                    ) \r\n                    ))\r\n                }\r\n            </div> \r\n        </div>\r\n    )\r\n}","C:\\Users\\mopat\\dsav-363\\src\\Investors\\Investor.js",["90"],"import React, {useEffect, useState} from 'react'\r\nimport \"./Investor.css\"\r\nimport EditPortfolio from \"../Portfolio/Portfolio\"\r\n\r\n\r\n\r\nfunction Investor() {\r\n    const [name, setName] = useState(\"\")\r\n    const [investors, setInvestors] = useState([\"Mo Patel\"])\r\n\r\n\r\n    function addInvestor(){\r\n        investors.length < 10 ? setInvestors([...investors, name]) : alert(\"Max players reached\")\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <label>Name: </label>\r\n            <input type = \"text\" placeholder = \"Name\" onChange = {(e) => setName(e.target.value)}></input>\r\n            <button type = \"submit\" onClick = {addInvestor}>Add user</button>\r\n            \r\n            {investors.map(investor => (\r\n                <div>\r\n                    <EditPortfolio name = {investor} />\r\n                </div>\r\n            ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Investor\r\n",["91","92"],"C:\\Users\\mopat\\dsav-363\\src\\GameSession\\GameSession.js",[],"C:\\Users\\mopat\\dsav-363\\src\\Redux\\index.js",[],"C:\\Users\\mopat\\dsav-363\\src\\Login\\Login.js",["93","94"],"C:\\Users\\mopat\\dsav-363\\src\\firebase.js",[],"C:\\Users\\mopat\\dsav-363\\src\\CreateGame\\CreateGame.js",["95"],"C:\\Users\\mopat\\dsav-363\\src\\Profile\\Profile.js",["96","97","98"],"import React, { useEffect, useState } from 'react'\r\nimport { db } from \"../firebase\"\r\nimport {connect} from \"react-redux\"\r\nimport \"./Profile.css\"\r\nimport store from '../Redux/index'\r\nimport GameModal from \"../GameModal/GameModal\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\n//import CloseIcon from '@material-ui/icons/Close';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\n\r\n\r\n\r\nfunction Profile({ email, userInfo }) {\r\n    const username = store.getState().username\r\n    const [name, setName] = useState(username)\r\n    const [bio, setBio] = useState(`Hi, my name is ${userInfo.displayName}`)\r\n    const [wins, setWins] = useState(0)\r\n    const [totalGames, setTotalGames] = useState(0)\r\n    const [currentGames, setCurrentGames] = useState(store.getState().MyGames.length)\r\n    const [userPreviousGames, setUserPreviousGames] = useState(store.getState().PreviousGames)\r\n    const [tempBio, setTempBio] = useState(\"\")\r\n    const [editBio, setEditBio] = useState(false)\r\n    const [games, setGames] = useState([])\r\n    const [previousGames, setPreviousGames] = useState([])\r\n    const [open, setOpen] = useState(false);\r\n    const [modalGameInfo, setModalGameInfo] = useState(null)\r\n\r\n    function changeBio(){\r\n        setEditBio(!editBio)\r\n    }\r\n\r\n    const handleClickOpen = (instance) => {\r\n        setOpen(true)\r\n        setModalGameInfo(instance)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }   \r\n\r\n    function saveBio(){\r\n        setEditBio(!editBio)\r\n        setBio(tempBio)\r\n\r\n        if(tempBio.length > 140){\r\n            alert(\"New bio is too long. Please shorten it.\")\r\n        }\r\n        else{\r\n            var docRef = db.collection(\"users\").doc(username)\r\n            docRef.update({bio: tempBio})\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        var docRef = db.collection(\"users\").doc(username);\r\n\r\n        docRef.get().then((doc) => {\r\n            if (doc.exists) {\r\n                console.log(\"Document data:\", doc.data());\r\n                setName(doc.data().display_name)\r\n                setBio(doc.data().bio)\r\n                setWins(doc.data().wins)\r\n                setUserPreviousGames(doc.data().previous_games)\r\n                setTotalGames(doc.data().previous_games.length)\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error)\r\n        })\r\n\r\n        db.collection('previous_games').onSnapshot(snapshot => {          \r\n            setGames(snapshot.docs.map(doc => doc))  \r\n        })\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        for(let i = 0; i < games.length; i++){\r\n            if(userPreviousGames.indexOf(games[i].id) !== -1){\r\n                setPreviousGames([...previousGames, games[i]])\r\n            }\r\n        }\r\n    }, [games])\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <h3>{name}</h3>\r\n            <img className=\"profile-pic\" src={userInfo.photoURL} alt=\"Profile Pic\" /> \r\n\r\n            {editBio ? (\r\n                <div className = \"bio-size\"> \r\n                    <textarea\r\n                        style={{marginTop: \"24px\"}}\r\n                        type=\"text\" \r\n                        maxLength=\"140\"\r\n                        rows = \"3\"\r\n                        cols = \"50\"\r\n                        defaultValue={bio}\r\n                        onChange={(e) => setTempBio(e.target.value)}\r\n                    />\r\n\r\n                    <PublishIcon onClick={saveBio} style={{cursor: \"pointer\"}} />\r\n                    <DeleteIcon onClick={changeBio} style={{cursor: \"pointer\"}} />\r\n                </div>\r\n            ) \r\n            : (\r\n                <div className=\"bio-section\">\r\n                    <h3 id=\"bio\">{bio}</h3> \r\n                    <EditIcon onClick={changeBio} style={{cursor: \"pointer\", marginLeft: \"5px\"}} />\r\n                </div>\r\n            )}      \r\n\r\n            <div className = \"stats\">\r\n                <div className=\"box\"><span> <u>Wins</u> <h1>{wins}</h1></span></div>\r\n                <div className=\"box\" ><span> <u>Games Played</u> <h1>{totalGames}</h1></span></div>  \r\n                <div className=\"box\" ><span> <u>Current Games</u> <h1>{currentGames}</h1></span></div>    \r\n            </div>\r\n\r\n            <h1 id=\"prev-game-title\">Previous Games</h1>\r\n            <div id=\"game-style\">\r\n                {previousGames.length === 0 ? (\r\n                        <p style={{color: \"white\"}}>Looks like you haven't completed a game yet. Head over to \"Find a Game\" to join a game session or \"Create a Game\" to create a new game session!</p>\r\n                    ) : (\r\n                    previousGames.map((instance) => (\r\n                        <div>\r\n                            <div onClick={() => handleClickOpen(instance)} className=\"flip-card2\">                        \r\n                                <div className=\"spanner2\">\r\n                                    <h2><u>{instance.data().name}</u></h2>\r\n                                    <h3>Created By: {instance.data().creator}</h3>\r\n                                    <br />\r\n                                    <hr style={{width: \"100%\"}} />\r\n                                </div>\r\n                                <br />\r\n                                <div className=\"Midspanner2\">                                 \r\n                                    <h3>{instance.data().player_count} / {instance.data().max_players} <br /> Players</h3>\r\n                                </div>\r\n                                <br />\r\n                                <hr style={{width: \"100%\"}} />\r\n                                <br />\r\n                                <div className=\"non-spanner2\">\r\n                                    <h3>Starting Amount: {instance.data().starting_amount} USD</h3>\r\n                                    <h3>Start date: {String(new Date(instance.data().start_date)).substring(0,16)}</h3>\r\n                                </div>\r\n\r\n                                <div className=\"spanner2\">                                 \r\n                                    <h3>Players: {instance.data().players.length} / {instance.data().max_players}</h3>\r\n                                </div>    \r\n                            </div>\r\n                        </div>      \r\n                    )))\r\n                    } \r\n                </div>\r\n            <Dialog style = {{maxWidth: \"100%\"}} fullScreen open = {open}>\r\n                <Toolbar style = {{maxWidth: \"90%\"}}> \r\n                    <IconButton edge=\"start\" color=\"black\" onClick={handleClose} aria-label=\"close\">\r\n                        <p> Close </p>\r\n                    </IconButton>\r\n                </Toolbar>\r\n                <GameModal gameInfo={modalGameInfo} />\r\n            </Dialog> \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    username: state.username,\r\n    email: state.email,\r\n    userInfo: state.userInfo\r\n  })\r\n  \r\n  export default connect(mapStateToProps)(Profile)\r\n  ","C:\\Users\\mopat\\dsav-363\\src\\FindGames\\FindGames.js",["99","100","101","102"],"import React, { useState, useEffect } from 'react'\r\nimport \"./FindGames.css\"\r\nimport { db } from \"../firebase\"\r\nimport store from \"../Redux/index\"\r\nimport firebase from \"firebase\"\r\nimport GameModal from \"../GameModal/GameModal\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\n//import CloseIcon from '@material-ui/icons/Close';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Select from \"react-select\";\r\nimport { partition } from 'd3'\r\n\r\n\r\nfunction FindGames() {\r\n    const [games, setGames] = useState([])\r\n    const [filteredGame, setFilteredGame] = useState([])\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [modalGameInfo, setModalGameInfo] = useState(null)\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const [unfiltered, setUnfiltered] = useState([]) // testing\r\n    const [currentFilter, setCurrentFilter] = useState() // testing\r\n    const filters = [\r\n        { label: \"Choose a Filter\", value: 0 },\r\n        { label: \"Starting Cash (High to Low)\", value: 1 },\r\n        { label: \"Starting Cash (Low to High)\", value: 2 },\r\n        { label: \"Player Count (High to Low)\", value: 3 },\r\n        { label: \"Player Count (Low to High)\", value: 4 }\r\n    ];\r\n\r\n\r\n    const handleClickOpen = (instance) => {\r\n      setOpen(true)\r\n      setModalGameInfo(instance)\r\n    }\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false)\r\n    }\r\n    \r\n    useEffect(() => { \r\n        db.collection('joinable_games').onSnapshot(snapshot => {          \r\n            setGames(snapshot.docs.map(doc => doc))  \r\n        })\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        setFilteredGame(\r\n          games.filter((game) =>\r\n            game.data().name.toLowerCase().includes(search.toLowerCase())\r\n          )\r\n        )\r\n\r\n        setUnfiltered(filteredGame)\r\n\r\n      }, [search, games]);\r\n\r\n    const quicksort = (array, l, h, filter) => {\r\n\r\n        var p\r\n\r\n        if((h - l) > 0){\r\n            p = split(array, l, h, filter)\r\n            quicksort(array, l, p-1, filter)\r\n            quicksort(array, p+1, h, filter)\r\n        }\r\n\r\n        if(filter === 1 || filter === 3){\r\n            return (array.reverse())\r\n        }\r\n        return (array)\r\n    }\r\n\r\n    const split = (array, l, h, filter) => {\r\n        var p = h\r\n        var initialHigh = l\r\n\r\n        for(var i = l; i < h; i++){\r\n            if(filter === 1 || filter === 2){\r\n                if(array[i].data().starting_amount < array[p].data().starting_amount){\r\n                    [array[i], array[initialHigh]] = [array[initialHigh], array[i]]\r\n                    initialHigh++\r\n                }\r\n            }\r\n            if(filter === 3 || filter === 4){\r\n                if(array[i].data().players.length < array[p].data().players.length){\r\n                    [array[i], array[initialHigh]] = [array[initialHigh], array[i]]\r\n                    initialHigh++\r\n                }\r\n            }\r\n        }\r\n\r\n        [array[p], array[initialHigh]] = [array[initialHigh], array[p]]\r\n\r\n        return (initialHigh)\r\n    }\r\n\r\n    const setFilter = e => {\r\n\r\n        setCurrentFilter(e.value)\r\n        \r\n        //\"Choose a Filter\"\r\n        if(e.value === 0){\r\n            setFilteredGame(unfiltered)\r\n        }\r\n        // Filters based on option\r\n        if(e.value !== 0){\r\n            setFilteredGame(quicksort(filteredGame, 0, filteredGame.length - 1, e.value))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"search-filter-pos\">\r\n                <div className=\"searchbar\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search for a Game\"\r\n                        onChange={(e) => setSearch(e.target.value)}\r\n                    />\r\n                    <i className=\"fas fa-search\" id=\"searchGlass\"></i>\r\n                </div>\r\n\r\n                <div className = \"filter-menu\">\r\n                    <Select \r\n                        \r\n                        placeholder = \"Choose a Filter\" \r\n                        value={filters.filter(obj => obj.value === currentFilter)}\r\n                        options={filters} \r\n                        onChange={setFilter}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div id = \"game-style\">\r\n                {filteredGame.length === 0 ? (\r\n                    <p style={{color: \"white\"}}>No new games found. Head over to \"Create a Game\" to create a new game session!</p>\r\n                ) : (\r\n                filteredGame.map((instance) => (\r\n                    <div>\r\n                        <div onClick={() => handleClickOpen(instance)} className=\"flip-card\">                   \r\n                            <div id=\"spanner\">\r\n                                <h2><u>{instance.data().name}</u></h2>\r\n                                <h3>Created By: {instance.data().creator}</h3>\r\n                                <br />\r\n                                <hr style={{width: \"100%\"}} />\r\n                            </div>\r\n                            <br />\r\n                            <div id=\"Midspanner\">                                 \r\n                                <h3>{instance.data().players.length} / {instance.data().max_players} <br /> Players</h3>\r\n                            </div>\r\n                            <br />\r\n                            <hr style={{width: \"100%\"}} />\r\n                            <br />\r\n                            <div id=\"non-spanner\">\r\n                                <h3>Starting Amount: {instance.data().starting_amount} USD</h3>\r\n                                <h3>Start date: {String(new Date(instance.data().start_date)).substring(0,16)}</h3>\r\n                            </div>\r\n\r\n                            <div id=\"spanner\">                                 \r\n                                <h3>Players: {instance.data().players.length} / {instance.data().max_players}</h3>\r\n                            </div>     \r\n                        </div>\r\n                    </div>      \r\n                )))\r\n                } \r\n            </div>  \r\n\r\n            <Dialog style = {{maxWidth: \"100%\"}} fullScreen open = {open}>\r\n                <Toolbar style = {{maxWidth: \"90%\"}}> \r\n                    <IconButton edge=\"start\" color=\"black\" onClick={handleClose} aria-label=\"close\">\r\n                        <p> Close </p>\r\n                    </IconButton>\r\n                </Toolbar>\r\n                <GameModal gameInfo={modalGameInfo} />\r\n            </Dialog> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FindGames","C:\\Users\\mopat\\dsav-363\\src\\MyGames\\MyGames.js",["103","104","105","106","107"],"import React, { useEffect, useState } from 'react'\r\nimport \"./MyGames.css\"\r\nimport { db } from \"../firebase\"\r\nimport store from \"../Redux/index\"\r\nimport GameModal from \"../GameModal/GameModal\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport firebase from \"firebase\"\r\nimport Select from \"react-select\";\r\n\r\n\r\nfunction MyGames() {\r\n    const [MyGameIds, setMyGameIds] = useState(store.getState().MyGames)\r\n    const [showGames, setShowGames] = useState([])\r\n    const [currentGames, setCurrentGames] = useState([])\r\n    const [open, setOpen] = useState(false);\r\n    const [modalGameInfo, setModalGameInfo] = useState(null)\r\n    const [search, setSearch] = useState(\"\");\r\n    \r\n    const [filteredGame, setFilteredGame] = useState([])\r\n    const [unfiltered, setUnfiltered] = useState([]) // testing\r\n    const [currentFilter, setCurrentFilter] = useState() // testing\r\n    const filters = [\r\n        { label: \"Choose a Filter\", value: 0 },\r\n        { label: \"Starting Cash (High to Low)\", value: 1 },\r\n        { label: \"Starting Cash (Low to High)\", value: 2 },\r\n        { label: \"Player Count (High to Low)\", value: 3 },\r\n        { label: \"Player Count (Low to High)\", value: 4 }\r\n    ]\r\n\r\n    const handleClickOpen = (instance) => {\r\n      setOpen(true)\r\n      setModalGameInfo(instance)\r\n    }\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false)\r\n    }\r\n\r\n    function getGames() {\r\n        db.collection('current_games').onSnapshot(snapshot => {          \r\n            setShowGames(snapshot.docs.map(doc => doc))         \r\n        }) \r\n    }\r\n\r\n    useEffect(() => { \r\n        getGames()\r\n    }, [])\r\n\r\n    useEffect(() => {    \r\n        setFilteredGame(\r\n            showGames.filter(game => MyGameIds.indexOf(game.id) !== -1).filter((game) =>\r\n            game.data().name.toLowerCase().includes(search.toLowerCase())\r\n          )\r\n        )\r\n\r\n        setUnfiltered(filteredGame)\r\n\r\n    }, [search, showGames]);\r\n\r\n    const quicksort = (array, l, h, filter) => {\r\n\r\n        var p\r\n\r\n        if((h - l) > 0){\r\n            p = split(array, l, h, filter)\r\n            quicksort(array, l, p-1, filter)\r\n            quicksort(array, p+1, h, filter)\r\n        }\r\n\r\n        if(filter === 1 || filter === 3){\r\n            return (array.reverse())\r\n        }\r\n        return (array)\r\n    }\r\n\r\n    const split = (array, l, h, filter) => {\r\n        var p = h\r\n        var initialHigh = l\r\n\r\n        for(var i = l; i < h; i++){\r\n            if(filter === 1 || filter === 2){\r\n                if(array[i].data().starting_amount < array[p].data().starting_amount){\r\n                    [array[i], array[initialHigh]] = [array[initialHigh], array[i]]\r\n                    initialHigh++\r\n                }\r\n            }\r\n            if(filter === 3 || filter === 4){\r\n                if(array[i].data().players.length < array[p].data().players.length){\r\n                    [array[i], array[initialHigh]] = [array[initialHigh], array[i]]\r\n                    initialHigh++\r\n                }\r\n            }\r\n        }\r\n\r\n        [array[p], array[initialHigh]] = [array[initialHigh], array[p]]\r\n\r\n        return (initialHigh)\r\n    }\r\n\r\n    const setFilter = e => {\r\n\r\n        setCurrentFilter(e.value)\r\n        \r\n        //\"Choose a Filter\"\r\n        if(e.value === 0){\r\n            setFilteredGame(unfiltered)\r\n        }\r\n        // Filters based on option\r\n        if(e.value !== 0){\r\n            setFilteredGame(quicksort(filteredGame, 0, filteredGame.length - 1, e.value))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"search-filter-pos\">\r\n                <div className=\"searchbar\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search for a Game\"\r\n                        onChange={(e) => setSearch(e.target.value)}\r\n                    />\r\n                    <i className=\"fas fa-search\" id=\"searchGlass\"></i>\r\n                </div>\r\n\r\n                <div className = \"filter-menu\">\r\n                    <Select \r\n                        placeholder = \"Choose a Filter\" \r\n                        value={filters.filter(obj => obj.value === currentFilter)}\r\n                        options={filters} \r\n                        onChange={setFilter}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div id = \"game-style\">\r\n            {filteredGame.length === 0 ? (\r\n                <div className = \"info-text\">\r\n                    <p style={{color: \"white\"}}>Head over to \"Find Games\" to join an upcoming game session!</p> \r\n                    <p style = {{color: \"rgb(255, 103, 103)\"}}>Games will only appear after they start!</p>\r\n                </div>\r\n            ) : (\r\n            filteredGame.map((instance) => (\r\n                <div>\r\n                    <div onClick={() => handleClickOpen(instance)} className=\"flip-card\">\r\n                        <div className=\"flip-card-inner\">                      \r\n                            <div id=\"spanner\">\r\n                                <h2><u>{instance.data().name}</u></h2>\r\n                                <h3>Created By: {instance.data().creator}</h3>\r\n                                <br />\r\n                                <hr style={{width: \"100%\"}} />\r\n                            </div>\r\n                            <br />\r\n                            <div id=\"Midspanner\">                                 \r\n                                <h3>{instance.data().players.length} / {instance.data().max_players} <br /> Players</h3>\r\n                            </div>\r\n                            <br />\r\n                            <hr style={{width: \"100%\"}} />\r\n                            <br />\r\n                            <div id=\"non-spanner\">\r\n                                <h3>Starting Amount: {instance.data().starting_amount} USD</h3>\r\n                                <h3>Start date: {String(new Date(instance.data().start_date)).substring(0,16)}</h3>\r\n                            </div>\r\n\r\n                            <div id=\"spanner\">                                 \r\n                                <h3>Players: {instance.data().players.length} / {instance.data().max_players}</h3>\r\n                            </div>         \r\n                        </div>\r\n                    </div>\r\n                </div>      \r\n            )))\r\n            } \r\n        </div>  \r\n\r\n        <Dialog style = {{maxWidth: \"100%\"}} fullScreen open = {open}>\r\n            <Toolbar style = {{maxWidth: \"90%\"}}> \r\n                <IconButton edge=\"start\" color=\"black\" onClick={handleClose} aria-label=\"close\">\r\n                    <p> Close </p>\r\n                </IconButton>\r\n            </Toolbar>\r\n            <GameModal gameInfo={modalGameInfo} />\r\n        </Dialog> \r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MyGames\r\n","C:\\Users\\mopat\\dsav-363\\src\\test\\test.js",["108","109"],"import React from 'react'\r\nimport \"./test.css\"\r\n\r\nfunction Test() {\r\n    return (\r\n        <div>                \r\n            <div id=\"blurry-filter\"></div>\r\n            <header>\r\n            <div>\r\n                <article id=\"title\"><span className=\"parent\">Fantasy</span><br/><span className=\"name\">Markets</span></article>\r\n                <article id=\"reference\"><a href=\"https://dribbble.com/shots/3956995-Apple-OS-MacOS-Finder-UI-motion\" target=\"_blank\" rel=\"noopener\">\r\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 32 32\">\r\n                    <path fill=\"currentcolor\" d=\"M16 0C7.16703 0 0 7.16703 0 16C0 24.833 7.16703 32 16 32C24.8156 32 32 24.833 32 16C32 7.16703 24.8156 0 16 0ZM26.5683 7.37527C28.4772 9.70065 29.6226 12.6681 29.6573 15.8785C29.2061 15.7918 24.6941 14.872 20.1475 15.4447C20.0434 15.2191 19.9566 14.9761 19.8525 14.7332C19.5748 14.0738 19.2625 13.397 18.9501 12.7549C23.9826 10.7072 26.2733 7.75705 26.5683 7.37527ZM16 2.36009C19.4707 2.36009 22.6464 3.66161 25.0586 5.7961C24.8156 6.14317 22.7505 8.90239 17.8915 10.7245C15.6529 6.61171 13.1714 3.24512 12.7896 2.72451C13.8134 2.48156 14.8894 2.36009 16 2.36009ZM10.1866 3.64425C10.551 4.13015 12.9805 7.5141 15.2538 11.5401C8.86768 13.2408 3.22777 13.2061 2.62039 13.2061C3.50542 8.9718 6.36876 5.44902 10.1866 3.64425ZM2.32538 16.0174C2.32538 15.8785 2.32538 15.7397 2.32538 15.6009C2.9154 15.6182 9.54447 15.705 16.3644 13.6573C16.7636 14.4208 17.128 15.2017 17.4751 15.9826C17.3015 16.0347 17.1106 16.0868 16.9371 16.1388C9.89154 18.4121 6.14317 24.6247 5.8308 25.1453C3.6616 22.7332 2.32538 19.5228 2.32538 16.0174ZM16 29.6746C12.8416 29.6746 9.92625 28.5987 7.61822 26.7939C7.86117 26.2907 10.6377 20.9458 18.3427 18.256C18.3774 18.2386 18.3948 18.2386 18.4295 18.2213C20.3557 23.2017 21.1367 27.3839 21.3449 28.5813C19.6963 29.2928 17.8915 29.6746 16 29.6746ZM23.6182 27.3319C23.4794 26.4989 22.7505 22.5076 20.9631 17.5965C25.2495 16.9197 28.9978 18.0304 29.4664 18.1866C28.8764 21.987 26.6898 25.2668 23.6182 27.3319Z\"></path>\r\n                    </svg></a><a href=\"https://codepen.io/iamvdo/pen/xECmI\" target=\"_blank\" rel=\"noopener\">\r\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                    <path fill=\"currentcolor\" d=\"M15.09 12L12 14.08v.01L8.91 12 12 9.92 15.09 12M12 2a.93.93 0 00-.47.15L2.5 8.11c-.23.11-.41.32-.5.56v6.25c0 .41 0 .41.15.61l9.38 6.33c.14.1.31.14.47.14.16 0 .33-.05.47-.15l9.38-6.35c.15-.17.15-.17.15-.58V8.67a1.04 1.04 0 00-.5-.57l-9.03-5.95A.843.843 0 0012 2m4.58 11l3.01 2.04-6.76 4.56v-4.07L16.58 13m3.11-4.1L16.58 11l-3.75-2.53V4.38l6.86 4.52m.64 1.57v3.06L18.07 12l2.26-1.53M7.42 13l3.75 2.54v4.06l-6.76-4.56L7.42 13M4.31 8.9l6.86-4.51V8.5L7.42 11 4.31 8.9m-.64 1.6L5.93 12l-2.26 1.54V10.5z\"></path>\r\n                    </svg></a></article>\r\n            </div>\r\n            </header>\r\n            <section id=\"folders\">\r\n            <article>Find Games</article>\r\n            <article>My Games</article>\r\n            <article>Profile</article>\r\n            </section>\r\n            <main>\r\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1593414220166-085caeae0382?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=751&amp;q=80)\"}}>\r\n                <figcaption>City-01</figcaption>\r\n            </figure>\r\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1593532847202-e818146e134a?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=750&amp;q=80)\"}}>\r\n                <figcaption>Painting-01</figcaption>\r\n            </figure>\r\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1593260654451-a214d27978fb?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=375&amp;q=80)\"}}>\r\n                <figcaption>Train-01</figcaption>\r\n            </figure>\r\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1593515529105-cec0bd21e1f7?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=750&amp;q=80)\"}}>\r\n                <figcaption>Sky-01</figcaption>\r\n            </figure>\r\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1593377872300-67454a2954e1?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=673&amp;q=80)\"}}>\r\n                <figcaption>Citi-02</figcaption>\r\n            </figure>\r\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1592185285645-5b9d0b13743c?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=750&amp;q=80)\"}}>\r\n                <figcaption>Painting-02</figcaption>\r\n            </figure>\r\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1593260654784-4aa47cd0c803?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=375&amp;q=80)\"}}>\r\n                <figcaption>City-03</figcaption>\r\n            </figure>\r\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1593174942395-f7bc79522493?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=375&amp;q=80)\"}}>\r\n                <figcaption>Nature-01</figcaption>\r\n            </figure>\r\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1593055132632-6aeec3f1dc00?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=750&amp;q=80)\"}}>\r\n                <figcaption>Nature-02</figcaption>\r\n            </figure>\r\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1593201007276-bd95963531b2?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=334&amp;q=80)\"}}>\r\n                <figcaption>Sky-02</figcaption>\r\n            </figure>\r\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1593157729036-ad7c7bb719c6?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=375&amp;q=80)\"}}>\r\n                <figcaption>City-04</figcaption>\r\n            </figure>\r\n            </main>\r\n            <footer></footer> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Test\r\n","C:\\Users\\mopat\\dsav-363\\src\\GameModal\\GameModal.js",["110","111","112","113","114"],"import React, {useEffect, useState} from 'react'\r\nimport firebase from \"firebase\"\r\nimport { db } from \"../firebase\"\r\nimport store from \"../Redux/index\"\r\nimport \"./GameModal.css\"\r\nimport EditPortfolio, { ViewPortfolio } from \"../Portfolio/Portfolio\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\n\r\nfunction GameModal({ gameInfo }) {\r\n    const [Portfolio, setPortfolio] = useState()\r\n    const [players, setPlayers] = useState([])\r\n    const [leaderboard, setLeaderboard] = useState([])\r\n    const [Tokens, setTokens] = useState([])\r\n    const [view, setView] = useState(false)\r\n    const [editPort, setEditPort] = useState(false)\r\n    const [currentTime, setCurrentTime] = useState(Math.round(new Date().getTime()))\r\n    const [days, setDays] = useState(\"\")\r\n    const [hours, setHours] = useState(\"23\")\r\n    const [minutes, setMinutes] = useState(\"59\")\r\n    const [seconds, setSeconds] = useState(\"59\")\r\n\r\n    useEffect(() => {\r\n        gameInfo.data().players.forEach((player) => {\r\n            console.log(player)\r\n            console.log(gameInfo.data()[player].total)\r\n            setLeaderboard( [...leaderboard, {[player] : gameInfo.data()[player].total}] )\r\n        })\r\n        setPlayers(gameInfo.data().players)\r\n    }, [])\r\n    \r\n    function joinGameSession(e){\r\n        e.preventDefault()\r\n        if(gameInfo.data()[\"players\"].indexOf(store.getState().username) === -1){\r\n            db.collection(\"joinable_games\").doc(String(e.target.value)).update({\r\n                [store.getState().username]: {cash: Number(gameInfo.data().starting_amount), canEdit: true, total: Number(gameInfo.data().starting_amount)},\r\n                players: firebase.firestore.FieldValue.arrayUnion( store.getState().username )\r\n            })  \r\n            db.collection(\"users\").doc(store.getState().username).update({\r\n                current_games: firebase.firestore.FieldValue.arrayUnion(e.target.value)\r\n            })\r\n            let new_state_games = store.getState().MyGames\r\n            new_state_games.push(e.target.value)\r\n            store.dispatch({ // store user info in global state \r\n                type: \"ADD_POST\",\r\n                payload: {         \r\n                    username: store.getState().username,\r\n                    email: store.getState().email,\r\n                    userInfo: store.getState().userInfo,\r\n                    MyGames: new_state_games       \r\n                } \r\n            }) \r\n        }\r\n    }\r\n\r\n    function displayEditPortfolio(username, portfolio){\r\n        setEditPort(true)\r\n        setPortfolio(<EditPortfolio username={username} gameId={gameInfo.id} portfolio={portfolio} />)\r\n    }\r\n\r\n    const [coinNames, setCoinNames] = useState([])\r\n    const [dailyCoinPrices, setDailyCoinPrices] = useState([])\r\n    async function getMarkers() {\r\n        const prices = await firebase.firestore().collection('coin_prices')\r\n        prices.get().then((querySnapshot) => {\r\n            setDailyCoinPrices(querySnapshot.docs.map(doc => doc.data().value)) \r\n            setCoinNames(querySnapshot.docs.map(doc => doc.id))   \r\n          }) \r\n      }\r\n    useEffect(() => {\r\n       getMarkers()   \r\n    }, [])\r\n\r\n    function displayViewPortfolio(username, portfolio, ranking){  \r\n        setTokens(\r\n            Object.keys(portfolio).map((coin) => ( coin ))     \r\n        )\r\n\r\n        setTimeout(() => {}, 3000)\r\n\r\n        setView(true)\r\n        setPortfolio(<ViewPortfolio dailyCoinPrices={dailyCoinPrices} coinNames={coinNames} username={username} portfolio={portfolio} tokens={Tokens} rank={ranking} />)\r\n    }\r\n\r\n    const viewClose = () => {\r\n        setView(false)\r\n    }\r\n\r\n    const editPortClose = () => {\r\n        setEditPort(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let startTime = gameInfo.data().start_date\r\n        let endTime = gameInfo.data().end_date\r\n        if(startTime > currentTime){\r\n            setCurrentTime(Math.round(new Date().getTime()))\r\n      \r\n            let timer = (startTime - currentTime) / 1000\r\n\r\n            let d = Math.floor(timer / 86400)\r\n            let h = Math.floor(timer / 3600)\r\n            let m = Math.floor(timer % 3600 / 60)\r\n            let s = Math.floor(timer % 3600 % 60)  \r\n\r\n            setDays(d > 0 ? d + (d === 1 ? \" day\" : \" days\") : \"\")\r\n            setHours(h > 0 ? h + (h === 1 ? \" hour\" : \" hours\") : \"\")\r\n            setMinutes(m > 0 ? m + (m === 1 ? \" minute\" : \" minutes\") : \"\")\r\n            setSeconds(s > 0 ? s + (s === 1 ? \" second\" : \" seconds\") : \"\")\r\n        }\r\n        else {\r\n            setCurrentTime(Math.round(new Date().getTime()))\r\n\r\n            let timer = (endTime - currentTime) / 1000\r\n\r\n            let d = Math.floor(timer / 86400)\r\n            let h = Math.floor(timer % 86400 / 3600)\r\n            let m = Math.floor(timer % 86400 % 3600 / 60)\r\n            let s = Math.floor(timer % 86400 % 3600 % 60)\r\n        \r\n            setDays(d > 0 ? d + (d === 1 ? \" day\" : \" days\") : \"\")\r\n            setHours(h > 0 ? h + (h === 1 ? \" hour\" : \" hours\") : \"\")\r\n            setMinutes(m > 0 ? m + (m === 1 ? \" minute\" : \" minutes\") : \"\")\r\n            setSeconds(s > 0 ? s + (s === 1 ? \" second\" : \" seconds\") : \"\")\r\n        }\r\n    }, [])\r\n   \r\n    return (\r\n        <div id = \"info\">\r\n            <div id=\"game-info\">\r\n                <div className = \"game-information\">\r\n                    <h2><u>Game Information:</u></h2>\r\n                    <br />\r\n                    <h3 id= \"number\">{gameInfo.data().players.length} / {gameInfo.data().max_players} <br /> Players</h3>\r\n                    <br />  \r\n\r\n                    <h3>Starting Amount: {gameInfo.data().starting_amount} USD</h3>  \r\n                    <h3>Duration: {gameInfo.data().duration} {gameInfo.data().duration === 1 ? `week`: `weeks`}</h3>\r\n                    <br />\r\n\r\n                    <h3>Start date:<br/>{String(new Date(gameInfo.data().start_date)).substring(0,16)}</h3>\r\n                    <br /> \r\n                    <h3>End date: <br/>{String(new Date(gameInfo.data().end_date)).substring(0,16)}</h3>\r\n                    <br />\r\n\r\n                    {days !== \"\" ? (\r\n                        <div>\r\n                            <h3>Countdown:</h3>\r\n                            <h3>{days}</h3>\r\n                            <h3>{hours}</h3>\r\n                            <h3>{minutes}</h3>\r\n                            <h3>{seconds}</h3>\r\n                        </div>\r\n                    ) : new Date().getTime() > gameInfo.data().end_date ? (\r\n                        <div>\r\n                            <h3>Countdown:</h3>\r\n                            <p><strong style={{color: \"red\"}}>This game session is over.</strong></p>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <h3>Countdown:</h3>\r\n                            <h3>{hours}</h3>\r\n                            <h3>{minutes}</h3>\r\n                            <h3>{seconds}</h3>\r\n                        </div>\r\n                    )}\r\n\r\n                    {gameInfo.data().players.indexOf(store.getState().username) === -1 && gameInfo.data().players.length < gameInfo.data().max_players ? (\r\n                        <div>\r\n                            <button id=\"gameId\" value={`${gameInfo.id}`} onClick={(e) => {joinGameSession(e)}}>Enter Game</button> \r\n                        </div>\r\n                    ): (\r\n                        <p></p>\r\n                    )\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"game-players\">\r\n                <div id=\"game-name-creator\">\r\n                    <h1><u>{gameInfo.data().name}</u></h1>\r\n                    <h3>Created by {gameInfo.data().creator}</h3>\r\n                </div>\r\n        \r\n                {new Date().getTime() > gameInfo.data().start_date ? (\r\n                    <h2>Leaderboard</h2>\r\n                ) : (\r\n                    <h2>Current Players:</h2>\r\n                )\r\n                }\r\n                {players ? (\r\n                    players.map((player) => (\r\n                        <div id=\"leaderboard\">\r\n                            {gameInfo.data().players.indexOf(player) + 1 === 1 ? (\r\n                                <span>\r\n                                    <span><img src=\"https://img.icons8.com/offices/20/000000/medal2.png\"/></span>\r\n                                    <span style={{color: \"goldenrod\", marginLeft: \"5px\"}}> {gameInfo.data().players.indexOf(player) + 1}st Place: </span>\r\n                                </span>\r\n                            ) : gameInfo.data().players.indexOf(player) + 1 === 2 ? (\r\n                                <span>\r\n                                    <span><img src=\"https://img.icons8.com/officel/20/000000/medal-second-place.png\"/></span>\r\n                                    <span style={{color: \"silver\", marginLeft: \"5px\"}}> {gameInfo.data().players.indexOf(player) + 1}nd Place: </span>\r\n                                </span>\r\n                            ) : gameInfo.data().players.indexOf(player) + 1 === 3 ? (\r\n                                <span>\r\n                                    <span><img src=\"https://img.icons8.com/officel/20/000000/medal2-third-place.png\"/></span>\r\n                                    <span style={{color: \"brown\", marginLeft: \"5px\"}}> {gameInfo.data().players.indexOf(player) + 1}rd Place: </span>\r\n                                </span>\r\n                            ) : (\r\n                                <span style={{color: \"black\", marginLeft: \"5px\"}}> {gameInfo.data().players.indexOf(player) + 1}th Place: </span>\r\n                            )\r\n                            }               \r\n                            <span><strong>{player}</strong></span>\r\n                           \r\n                            <span id=\"portfolio-btns\">\r\n                                {store.getState().username === player && gameInfo.data()[player][\"canEdit\"]  && new Date().getTime() < gameInfo.data().start_date ? (\r\n                                    <span>\r\n                                        <span onClick={() => {displayEditPortfolio(player, gameInfo.data()[player])}} className=\"edit-portfolio-btn\"><u>Edit Portfolio</u></span>\r\n                                        <span onClick={() => {displayViewPortfolio(player, gameInfo.data()[player], gameInfo.data().players.indexOf(player) + 1)}} className=\"view-portfolio-btn\"><u>View Portfolio</u></span>\r\n                                    </span>\r\n                                    ) : (\r\n                                        <span onClick={() => {displayViewPortfolio(player, gameInfo.data()[player], gameInfo.data().players.indexOf(player) + 1)}} className=\"view-portfolio-btn\"><u>View Portfolio</u></span>\r\n                                    )\r\n                                }\r\n                            </span>            \r\n                        </div>\r\n                    ))\r\n                ): (\r\n                    <p>No Players Found</p>\r\n                )\r\n                }\r\n                </div>\r\n\r\n            <div className = \"rules\">\r\n                <h1><u>General Rules</u></h1>\r\n                <h3>1.) Don't refer to other user's portfolios as a means to make real life financial investments. Not that any of you would...</h3>\r\n                <h3>2.) Don't try to exploit any bugs you come across. Have some integrity. Reach out to us explaining the bug.</h3>\r\n                <h3>3.) You only get to finalize your portfolio once. Do your research, correctly input your investments, and hit \"Submit\". </h3>\r\n                <h3>4.) To reiterate, do NOT make any real life financial decisions based on the results/outcomes of these games. Seriously...</h3>\r\n                <h3>5.) Relax and have fun with it :)</h3>\r\n            </div>\r\n       \r\n            {/* The Modal for Viewing your Portfolio */}\r\n            <Dialog fullWidth maxWidth={'sm'} open = {view}>\r\n                <IconButton edge=\"start\" color=\"black\" onClick={viewClose} aria-label=\"close\">\r\n                    <p>Close</p>\r\n                </IconButton>\r\n                <div>{Portfolio}</div>\r\n            </Dialog>\r\n\r\n                {/* The Modal for Creating Your Portfolio */}\r\n            <Dialog fullWidth maxWidth={'md'} open = {editPort}>\r\n                <IconButton edge=\"start\" color=\"black\" onClick={editPortClose} aria-label=\"close\">\r\n                    <p>Close</p>\r\n                </IconButton>\r\n                <div>{Portfolio}</div>\r\n            </Dialog>\r\n        </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default GameModal\r\n","C:\\Users\\mopat\\dsav-363\\src\\reportWebVitals.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":10,"column":8,"nodeType":"121","messageId":"122","endLine":10,"endColumn":12},{"ruleId":"123","severity":1,"message":"124","line":61,"column":19,"nodeType":"125","endLine":61,"endColumn":22},{"ruleId":"119","severity":1,"message":"126","line":1,"column":26,"nodeType":"121","messageId":"122","endLine":1,"endColumn":35},{"ruleId":"119","severity":1,"message":"127","line":1,"column":37,"nodeType":"121","messageId":"122","endLine":1,"endColumn":46},{"ruleId":"115","replacedBy":"128"},{"ruleId":"117","replacedBy":"129"},{"ruleId":"119","severity":1,"message":"130","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":16},{"ruleId":"119","severity":1,"message":"131","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":13},{"ruleId":"132","severity":1,"message":"133","line":144,"column":8,"nodeType":"134","endLine":144,"endColumn":10,"suggestions":"135"},{"ruleId":"119","severity":1,"message":"126","line":1,"column":16,"nodeType":"121","messageId":"122","endLine":1,"endColumn":25},{"ruleId":"115","replacedBy":"136"},{"ruleId":"117","replacedBy":"137"},{"ruleId":"119","severity":1,"message":"126","line":1,"column":26,"nodeType":"121","messageId":"122","endLine":1,"endColumn":35},{"ruleId":"119","severity":1,"message":"138","line":10,"column":12,"nodeType":"121","messageId":"122","endLine":10,"endColumn":20},{"ruleId":"132","severity":1,"message":"139","line":19,"column":8,"nodeType":"134","endLine":19,"endColumn":10,"suggestions":"140"},{"ruleId":"119","severity":1,"message":"141","line":23,"column":26,"nodeType":"121","messageId":"122","endLine":23,"endColumn":41},{"ruleId":"132","severity":1,"message":"142","line":81,"column":8,"nodeType":"134","endLine":81,"endColumn":10,"suggestions":"143"},{"ruleId":"132","severity":1,"message":"144","line":89,"column":8,"nodeType":"134","endLine":89,"endColumn":15,"suggestions":"145"},{"ruleId":"119","severity":1,"message":"131","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":13},{"ruleId":"119","severity":1,"message":"130","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":16},{"ruleId":"119","severity":1,"message":"146","line":12,"column":10,"nodeType":"121","messageId":"122","endLine":12,"endColumn":19},{"ruleId":"132","severity":1,"message":"147","line":58,"column":10,"nodeType":"134","endLine":58,"endColumn":25,"suggestions":"148"},{"ruleId":"119","severity":1,"message":"130","line":9,"column":8,"nodeType":"121","messageId":"122","endLine":9,"endColumn":16},{"ruleId":"119","severity":1,"message":"149","line":14,"column":23,"nodeType":"121","messageId":"122","endLine":14,"endColumn":35},{"ruleId":"119","severity":1,"message":"150","line":16,"column":12,"nodeType":"121","messageId":"122","endLine":16,"endColumn":24},{"ruleId":"119","severity":1,"message":"141","line":16,"column":26,"nodeType":"121","messageId":"122","endLine":16,"endColumn":41},{"ruleId":"132","severity":1,"message":"151","line":60,"column":8,"nodeType":"134","endLine":60,"endColumn":27,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":11,"column":41,"nodeType":"125","endLine":11,"endColumn":149},{"ruleId":"153","severity":1,"message":"154","line":14,"column":31,"nodeType":"125","endLine":14,"endColumn":108},{"ruleId":"132","severity":1,"message":"155","line":31,"column":8,"nodeType":"134","endLine":31,"endColumn":10,"suggestions":"156"},{"ruleId":"132","severity":1,"message":"157","line":127,"column":8,"nodeType":"134","endLine":127,"endColumn":10,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":197,"column":43,"nodeType":"125","endLine":197,"endColumn":107},{"ruleId":"159","severity":1,"message":"160","line":202,"column":43,"nodeType":"125","endLine":202,"endColumn":119},{"ruleId":"159","severity":1,"message":"160","line":207,"column":43,"nodeType":"125","endLine":207,"endColumn":119},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'Test' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'prevState' is defined but never used.",["161"],["162"],"'firebase' is defined but never used.","'store' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'coinNames', 'dailyCoinPrices', 'portfolio', 'rank', 'tokens', and 'username'. Either include them or remove the dependency array.","ArrayExpression",["163"],["161"],["162"],"'userInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'create' and 'userRef'. Either include them or remove the dependency array.",["164"],"'setCurrentGames' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["165"],"React Hook useEffect has missing dependencies: 'previousGames' and 'userPreviousGames'. Either include them or remove the dependency array. You can also do a functional update 'setPreviousGames(p => ...)' if you only need 'previousGames' in the 'setPreviousGames' call.",["166"],"'partition' is defined but never used.","React Hook useEffect has a missing dependency: 'filteredGame'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setUnfiltered' needs the current value of 'filteredGame'.",["167"],"'setMyGameIds' is assigned a value but never used.","'currentGames' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'MyGameIds' and 'filteredGame'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setUnfiltered' needs the current value of 'filteredGame'.",["168"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","React Hook useEffect has missing dependencies: 'gameInfo' and 'leaderboard'. Either include them or remove the dependency array. If 'setPlayers' needs the current value of 'gameInfo', you can also switch to useReducer instead of useState and read 'gameInfo' in the reducer.",["169"],"React Hook useEffect has missing dependencies: 'currentTime' and 'gameInfo'. Either include them or remove the dependency array.",["170"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [coinNames, dailyCoinPrices, portfolio, rank, tokens, username]",{"range":"187","text":"188"},"Update the dependencies array to be: [create, userRef]",{"range":"189","text":"190"},"Update the dependencies array to be: [username]",{"range":"191","text":"192"},"Update the dependencies array to be: [games, previousGames, userPreviousGames]",{"range":"193","text":"194"},"Update the dependencies array to be: [search, games, filteredGame]",{"range":"195","text":"196"},"Update the dependencies array to be: [MyGameIds, filteredGame, search, showGames]",{"range":"197","text":"198"},"Update the dependencies array to be: [gameInfo, leaderboard]",{"range":"199","text":"200"},"Update the dependencies array to be: [currentTime, gameInfo]",{"range":"201","text":"202"},[6202,6204],"[coinNames, dailyCoinPrices, portfolio, rank, tokens, username]",[629,631],"[create, userRef]",[2867,2869],"[username]",[3106,3113],"[games, previousGames, userPreviousGames]",[1848,1863],"[search, games, filteredGame]",[2015,2034],"[MyGameIds, filteredGame, search, showGames]",[1291,1293],"[gameInfo, leaderboard]",[5230,5232],"[currentTime, gameInfo]"]