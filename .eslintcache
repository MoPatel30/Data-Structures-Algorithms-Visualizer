[{"/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/index.js":"1","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/reportWebVitals.js":"2","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/App.js":"3","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Redux/index.js":"4","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Stocks/Stocks.js":"5","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Investors/Investor.js":"6","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/GameSession/GameSession.js":"7","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Login/Login.js":"8","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Portfolio/Portfolio.js":"9","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/firebase.js":"10","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Crypto/Crypto.js":"11","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/CreateGame/CreateGame.js":"12"},{"size":581,"mtime":1614980554604,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611773527190,"results":"15","hashOfConfig":"14"},{"size":2273,"mtime":1615235506094,"results":"16","hashOfConfig":"14"},{"size":429,"mtime":1614980554602,"results":"17","hashOfConfig":"14"},{"size":287,"mtime":1614643772297,"results":"18","hashOfConfig":"14"},{"size":892,"mtime":1614980554597,"results":"19","hashOfConfig":"14"},{"size":719,"mtime":1614980554595,"results":"20","hashOfConfig":"14"},{"size":1775,"mtime":1614980554600,"results":"21","hashOfConfig":"14"},{"size":2021,"mtime":1614980554601,"results":"22","hashOfConfig":"14"},{"size":216,"mtime":1615235433415,"results":"23","hashOfConfig":"14"},{"size":1894,"mtime":1614980554592,"results":"24","hashOfConfig":"14"},{"size":1716,"mtime":1615235137648,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"rfgkq9",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/index.js",[],["57","58"],"/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/reportWebVitals.js",[],"/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/App.js",["59","60","61"],"/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Redux/index.js",[],"/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Stocks/Stocks.js",["62","63"],"import React, {useEffect, useState} from 'react'\r\nimport \"./Stocks.css\"\r\nimport axios from \"axios\"\r\n\r\n\r\n\r\nfunction Stocks() {\r\n  \r\n    useEffect(() => {\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Stocks</h1>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Stocks\r\n","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Investors/Investor.js",["64"],"import React, {useEffect, useState} from 'react'\r\nimport \"./Investor.css\"\r\nimport Portfolio from \"../Portfolio/Portfolio\"\r\n\r\n\r\n\r\nfunction Investor() {\r\n    const [name, setName] = useState(\"\")\r\n    const [investors, setInvestors] = useState([\"Mo Patel\"])\r\n\r\n\r\n    function addInvestor(){\r\n        investors.length < 10 ? setInvestors([...investors, name]) : alert(\"Max players reached\")\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <label>Name: </label>\r\n            <input type = \"text\" placeholder = \"Name\" onChange = {(e) => setName(e.target.value)}></input>\r\n            <button type = \"submit\" onClick = {addInvestor}>Add user</button>\r\n            \r\n            {investors.map(investor => (\r\n                <div>\r\n                    <Portfolio name = {investor} />\r\n                </div>\r\n            ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Investor\r\n","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/GameSession/GameSession.js",["65","66"],"import React, {useEffect, useState} from 'react'\nimport \"./GameSession.css\"\n\n\nfunction GameSession({gameInfo}) {\n    return (\n        <div className = \"gameInfo\">\n            \n            <h1>{gameInfo.name}</h1>  \n            <div>\n\n            <h3 className = \"players\">Player Count: {gameInfo.playerCount}/10</h3>\n                {gameInfo.players.map(player => (\n                    <div>\n                        <p>{player}</p>\n                    </div>\n                ))\n                }\n            </div>\n\n            <p>Starting amount: {gameInfo.amount} USD</p>\n            <p>Duration: {gameInfo.duration}</p>\n            <p>Game begins: 12:00:00 AM</p>\n        </div>\n    )\n}\n\nexport default GameSession\n","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Login/Login.js",["67","68"],"import React, {useState} from 'react'\nimport \"./Login.css\"\nimport { connect } from 'react-redux'\nimport store from \".././Redux/index\"\nimport {auth, provider} from \"../firebase.js\"\nimport firebase from \"firebase\"\n\n\nexport const Login = (props) => {\n    const [userInfo, updateUserInfo] = useState(null)\n    const [name, setName] = useState(store.getState().username)\n\n    const signIn = () => {\n        auth.setPersistence(firebase.auth.Auth.Persistence.SESSION)\n            .then(function() {\n                auth\n                .signInWithPopup(provider)\n                .then((result) =>{\n                    console.log(result)  \n                    updateUserInfo(result.user.displayName, result)\n                    store.dispatch({\n                        type: \"ADD_POST\",\n                        payload: {\n                            username: result.user.displayName,\n                            userInfo: result.user,\n                        } \n                    }) \n                    setName(result.user.displayName)\n                })\n                .catch((error) => alert(error.message)) \n            })\n    }\n    \n    return (\n        <div className=\"background\">\n\n            <div className=\"body\">\n                <h1 className=\"header\">Fantasy Markets</h1>\n\n                <h4 className=\"slogan\">Strategize, Invest, and take your portfolio <em>to the moon!</em></h4>\n\n                <button className=\"google\" onClick={signIn}>Google</button>   \n            </div>\n         \n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    username: state.username,\n    userInfo: state.userInfo\n})\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        dispatch\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Portfolio/Portfolio.js",["69","70","71"],"import React, {useState} from 'react'\r\nimport Crypto from \"../Crypto/Crypto\"\r\nimport \"./Portfolio.css\"\r\nimport { connect } from 'react-redux'\r\nimport store from \".././Redux/index\"\r\nimport {auth, provider} from \"../firebase.js\"\r\n\r\n\r\n\r\nfunction Portfolio({username}) {\r\n    const [amount, setAmount] = useState(10000)\r\n    const [assets, setAssets] = useState({})\r\n    const [coinName, setCoinName] = useState(\"\")\r\n    const [coinAmount, setCoinAmount] = useState(0)\r\n    const [numberOfCoins, setNumberOfCoins] = useState(5)\r\n\r\n    function addCoin(){\r\n        if(amount - coinAmount < 0){\r\n            alert(\"Not enough funds remaining\")\r\n        }\r\n        if(numberOfCoins <= 0){\r\n            alert(\"You are only allowed a maximum of 5 coins. Please rebalance your portfolio if you wish to use your remaining cash.\")\r\n        }\r\n        else{\r\n            let name = coinName\r\n\r\n            setAssets({...assets, [name]: coinAmount}) \r\n           \r\n            setAmount(amount - coinAmount)\r\n            setNumberOfCoins(numberOfCoins - 1)\r\n          \r\n            setCoinName(\"\")\r\n            setCoinAmount(0)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = \"portfolio\">           \r\n            <h1><u className = \"title\">{username}'s Portfolio</u></h1>\r\n\r\n            <div className = \"add-coin\">\r\n                <p>Coins remaining: {numberOfCoins} </p>\r\n                <p>Funds remaining: {amount}</p>\r\n\r\n                <input type = \"text\" placeholder = \"Full coin name\" onChange = {(e) => setCoinName(e.target.value)}></input>\r\n                <input type = \"number\" placeholder = \"Amount in USD\" onChange = {(e) => setCoinAmount(e.target.value)}></input>\r\n                <button type = \"submit\" onClick = {addCoin}> Add coin </button>\r\n            </div>\r\n\r\n            <Crypto portfolio = {assets} />   \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    username: state.username,\r\n    userInfo: state.userInfo\r\n})\r\n\r\n\r\nexport default (connect)(mapStateToProps)(Portfolio)","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/firebase.js",[],"/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Crypto/Crypto.js",["72","73"],"import React, {useState, useEffect, prevState} from 'react'\r\nimport \"./Crypto.css\"\r\nconst rp = require('request-promise');\r\n\r\n\r\n\r\nfunction Crypto({portfolio}) {\r\n    const [price, setPrice] = useState(\"\")\r\n    //const [prices, setPrices] = useState([0])\r\n\r\n    function getCoinInfo(currency, amount){\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            uri: 'https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest',\r\n            qs: {\r\n              'slug': currency,\r\n            },\r\n            \r\n            headers: {\r\n              'X-CMC_PRO_API_KEY': ''\r\n            },\r\n            json: true,\r\n            gzip: true\r\n          };\r\n          \r\n          rp(requestOptions).then(response => {\r\n            console.log('API call response:', response)\r\n            setPrice(String(response.data[Object.keys(response.data)[0]].quote.USD.price))\r\n            //setPrices([...prices, price])\r\n            return amount / price\r\n          }).catch((err) => {\r\n            console.log('API call error:', err.message)\r\n            return 0\r\n          })\r\n\r\n    }\r\n\r\n    /*\r\n        <input type = \"text\" placeholder=\"Enter currency name\" onChange = {(e) => setName(e.target.value)}></input>\r\n        <button type = \"submit\" onClick = {getCoinInfo}>Enter</button>\r\n            \r\n    */\r\n\r\n    return (\r\n        <div>\r\n           \r\n            {Object.keys(portfolio).map(currency => (\r\n                <div>\r\n                    <div className = \"coin-info\">\r\n                        <p>Name: {currency}</p>\r\n                        <p>Amount Invested: {portfolio[currency]} USD</p>\r\n                        <p>Current position: {getCoinInfo(currency, portfolio[currency])} {currency}</p>\r\n                    </div>\r\n                   \r\n                </div>\r\n            ))\r\n            }\r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Crypto\r\n\r\n\r\n\r\n","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/CreateGame/CreateGame.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":14},{"ruleId":"78","severity":1,"message":"82","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":50,"column":25,"nodeType":"85","endLine":52,"endColumn":13},{"ruleId":"78","severity":1,"message":"86","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":35},{"ruleId":"78","severity":1,"message":"87","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":13},{"ruleId":"78","severity":1,"message":"88","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"88","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"86","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":35},{"ruleId":"78","severity":1,"message":"89","line":10,"column":12,"nodeType":"80","messageId":"81","endLine":10,"endColumn":20},{"ruleId":"78","severity":1,"message":"90","line":11,"column":12,"nodeType":"80","messageId":"81","endLine":11,"endColumn":16},{"ruleId":"78","severity":1,"message":"91","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":13},{"ruleId":"78","severity":1,"message":"92","line":6,"column":9,"nodeType":"80","messageId":"81","endLine":6,"endColumn":13},{"ruleId":"78","severity":1,"message":"93","line":6,"column":15,"nodeType":"80","messageId":"81","endLine":6,"endColumn":23},{"ruleId":"78","severity":1,"message":"88","line":1,"column":26,"nodeType":"80","messageId":"81","endLine":1,"endColumn":35},{"ruleId":"78","severity":1,"message":"94","line":1,"column":37,"nodeType":"80","messageId":"81","endLine":1,"endColumn":46},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'Stocks' is defined but never used.","Identifier","unusedVar","'Portfolio' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'useState' is defined but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.","'userInfo' is assigned a value but never used.","'name' is assigned a value but never used.","'store' is defined but never used.","'auth' is defined but never used.","'provider' is defined but never used.","'prevState' is defined but never used.","no-global-assign","no-unsafe-negation"]