[{"/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/index.js":"1","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/reportWebVitals.js":"2","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/App.js":"3","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Redux/index.js":"4","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Login/Login.js":"5","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Profile/Profile.js":"6","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/CreateGame/CreateGame.js":"7","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Investors/Investor.js":"8","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/MyGames/MyGames.js":"9","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/GameSession/GameSession.js":"10","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/FindGames/FindGames.js":"11","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Portfolio/Portfolio.js":"12","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/test/test.js":"13","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/firebase.js":"14","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/GameModal/GameModal.js":"15","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Crypto/Crypto.js":"16"},{"size":581,"mtime":1614980554604,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1611773527190,"results":"19","hashOfConfig":"18"},{"size":2298,"mtime":1618865850203,"results":"20","hashOfConfig":"18"},{"size":694,"mtime":1618865850228,"results":"21","hashOfConfig":"18"},{"size":3834,"mtime":1618865850219,"results":"22","hashOfConfig":"18"},{"size":2755,"mtime":1618521128805,"results":"23","hashOfConfig":"18"},{"size":3167,"mtime":1618521128794,"results":"24","hashOfConfig":"18"},{"size":900,"mtime":1618521128800,"results":"25","hashOfConfig":"18"},{"size":4103,"mtime":1618865850220,"results":"26","hashOfConfig":"18"},{"size":696,"mtime":1616122245297,"results":"27","hashOfConfig":"18"},{"size":5891,"mtime":1618866149679,"results":"28","hashOfConfig":"18"},{"size":10234,"mtime":1619039348073,"results":"29","hashOfConfig":"18"},{"size":6220,"mtime":1617856105222,"results":"30","hashOfConfig":"18"},{"size":251,"mtime":1619063837009,"results":"31","hashOfConfig":"18"},{"size":7458,"mtime":1618866212260,"results":"32","hashOfConfig":"18"},{"size":2037,"mtime":1618521128796,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"rfgkq9",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},"/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/index.js",[],["77","78"],"/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/reportWebVitals.js",[],"/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/App.js",["79","80","81","82","83","84","85","86"],"import React, {useState, useEffect} from 'react'\nimport \"./App.css\"\n//import Portfolio from \"./Portfolio/Portfolio\"\nimport Investor from \"./Investors/Investor\"\nimport GameSession from './GameSession/GameSession'\nimport Login from \"./Login/Login\"\nimport {connect} from \"react-redux\"\nimport CreateGame from './CreateGame/CreateGame'\nimport Profile from \"./Profile/Profile\"\nimport FindGames from \"./FindGames/FindGames\"\nimport MyGames from \"./MyGames/MyGames\"\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Test from \"./test/test\"\nimport Portfolio from './Portfolio/Portfolio'\n\n\nfunction App({ username, userInfo }) {\n  return (\n    <div className = \"App\">\n      { username ? (\n        <Router>\n          <div>\n            <div id=\"blurry-filter\"></div>\n            <header>\n              <div>\n                <article id=\"title\"><span className=\"parent\" style={{color: \"white\"}}>Fantasy </span><span className=\"name\" style={{color: \"#4089F6\"}}>Markets</span><br/>\n                  <span style={{color: \"white\"}}>Strategize, Invest, and take your portfolio <em>to the moon!</em></span>\n                </article>\n                \n                <nav>\n                  <ul id = \"folders\">\n                    <li><Link to=\"/find\">Find a Game</Link></li>\n                    <li><Link to=\"/games\">My Games</Link></li>\n                    <li><Link to=\"/create\">Create Game</Link></li>\n                  </ul>\n                </nav>\n                \n                <Link to=\"/profile\"> \n                  <a>\n                    <img className=\"home-pro-pic\" src={userInfo.photoURL} />\n                  </a>\n                </Link>    \n              </div>\n\n              <hr id=\"header-line\" />\n            </header>\n\n            <Route path=\"/\" />\n            <Route path=\"/find\"  component={FindGames} />\n            <Route path=\"/games\"  component={MyGames} />\n            <Route path=\"/create\"  component={CreateGame} />\n            <Route path=\"/profile\"  component={Profile} />      \n\n          </div>\n        </Router>\n      ) : (\n        <div>\n          <Login />\n        </div>\n      )\n      }\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  username: state.username,\n  userInfo: state.userInfo\n})\n\nexport default connect(mapStateToProps)(App)\n\n","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Redux/index.js",[],"/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Login/Login.js",["87","88"],"import React, {useState} from 'react'\nimport \"./Login.css\"\nimport { connect } from 'react-redux'\nimport store from \".././Redux/index\"\nimport {auth, provider, db} from \"../firebase.js\"\nimport firebase from \"firebase\"\n\n\nexport const Login = (props) => {\n    const [userInfo, updateUserInfo] = useState(null)\n    const [name, setName] = useState(store.getState().username)\n\n    const signIn = () => {\n        auth.setPersistence(firebase.auth.Auth.Persistence.SESSION)\n            .then(function() {\n                auth\n                .signInWithPopup(provider)\n                .then((result) =>{\n                    console.log(result)  \n                    updateUserInfo(result.user.displayName, result)\n\n                    let username = result.user.email.split(\"@\")[0]\n                    console.log(username)\n                    \n                    store.dispatch({     // store user info in global state \n                        type: \"ADD_POST\",\n                        payload: {\n                            username: username,\n                            email: result.user.email,\n                            userInfo: result.user,\n                        } \n                    }) \n                    setName(username)\n                    \n                    var docRef = db.collection(\"users\").doc(result.user.email);\n                    // check if user credentials already exist. add new user data if they don't.\n                    docRef.get().then((doc) => {\n                        if (doc.exists) {\n                            console.log(\"Document data:\", doc.data());\n                        } else {\n                            // doc.data() will be undefined in this case\n                            console.log(\"No such document!\");\n                            db.collection(\"users\").doc(username).set({\n                                display_name: username,\n                                bio: `Hi, my name is ${result.user.displayName}!`,\n                                wins: 0,\n                                current_games: [],\n                                previous_games: [],\n                                games_won: []\n                            })\n                            .then(() => {\n                                console.log(\"Document successfully written!\")\n                            })\n                            .catch((error) => {\n                                console.error(\"Error writing document: \", error)\n                            })\n                        }\n                    }).catch((error) => {\n                        console.log(\"Error getting document:\", error)\n                    })\n\n                })\n                .catch((error) => alert(error.message)) \n            })\n    }\n    \n    return (\n        <div className=\"background\">\n\n            <div className=\"body\">\n                <h1 className=\"header\">Fantasy Markets</h1>\n\n                <h4 className=\"slogan\">Strategize, Invest, and take your portfolio <em>to the moon!</em></h4>\n\n                <button className=\"google\" onClick={signIn}>Google</button>   \n            </div>\n         \n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    username: state.username,\n    userInfo: state.userInfo\n})\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        dispatch\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Profile/Profile.js",["89","90"],"import React, { useEffect, useState } from 'react'\nimport { db } from \"../firebase\"\nimport {connect} from \"react-redux\"\nimport \"./Profile.css\"\nimport store from '../Redux/index'\n\n\nfunction Profile({ email, userInfo }) {\n    const username = store.getState().username\n    const [name, setName] = useState(username)\n    const [bio, setBio] = useState(`Hi, my name is ${userInfo.displayName}`)\n    const [wins, setWins] = useState(0)\n    const [totalGames, setTotalGames] = useState(0)\n    const [currentGames, setCurrentGames] = useState(0)\n    const[tempBio, setTempBio] = useState(\"\")\n    const [editBio, setEditBio] = useState(false)\n\n    function changeBio(){\n        setEditBio(!editBio);\n    }\n\n    function saveBio(){\n        setEditBio(!editBio);\n        setBio(tempBio)\n\n    }\n\n    useEffect(() => {\n        var docRef = db.collection(\"users\").doc(username);\n\n        docRef.get().then((doc) => {\n            if (doc.exists) {\n                console.log(\"Document data:\", doc.data());\n                setName(doc.data().display_name)\n                setBio(doc.data().bio)\n                setWins(doc.data().wins)\n                setTotalGames(doc.data().previous_games.length)\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document!\");\n            }\n        }).catch((error) => {\n            console.log(\"Error getting document:\", error)\n        })\n\n    }, [])\n\n    return (\n        <div className=\"profile\">\n            <h3>{name}</h3>\n            <img className=\"profile-pic\" src={userInfo.photoURL} alt=\"Profile Pic\" /> \n\n            {editBio ? (\n                <div> \n                    <textarea\n                        type=\"text\" \n                        defaultValue={bio}\n                        onChange={(e) => setTempBio(e.target.value)}\n                    />\n\n                    <button onClick={saveBio}>OK</button>\n                    <button onClick={changeBio}>X</button>\n                </div>\n            ) \n            : (\n                <div className=\"bio-section\">\n                    <h3>{bio}</h3> \n                    <button onClick={changeBio}>Edit</button>\n                </div>\n            )}      \n\n            <div className = \"stats\">\n                <div className=\"box\"><span>Wins: <h1>{wins}</h1></span></div>\n                <div className=\"box\" ><span>Games Played: <h1>{totalGames}</h1></span></div>  \n                <div className=\"box\" ><span>Current Games: <h1>{currentGames}</h1></span></div>    \n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    username: state.username,\n    email: state.email,\n    userInfo: state.userInfo\n  })\n  \n  export default connect(mapStateToProps)(Profile)\n  ","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/CreateGame/CreateGame.js",[],"/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Investors/Investor.js",["91"],"import React, {useEffect, useState} from 'react'\r\nimport \"./Investor.css\"\r\nimport EditPortfolio from \"../Portfolio/Portfolio\"\r\n\r\n\r\n\r\nfunction Investor() {\r\n    const [name, setName] = useState(\"\")\r\n    const [investors, setInvestors] = useState([\"Mo Patel\"])\r\n\r\n\r\n    function addInvestor(){\r\n        investors.length < 10 ? setInvestors([...investors, name]) : alert(\"Max players reached\")\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <label>Name: </label>\r\n            <input type = \"text\" placeholder = \"Name\" onChange = {(e) => setName(e.target.value)}></input>\r\n            <button type = \"submit\" onClick = {addInvestor}>Add user</button>\r\n            \r\n            {investors.map(investor => (\r\n                <div>\r\n                    <EditPortfolio name = {investor} />\r\n                </div>\r\n            ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Investor\r\n","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/MyGames/MyGames.js",["92","93","94"],"import React, { useEffect, useState } from 'react'\nimport \"./MyGames.css\"\nimport { db } from \"../firebase\"\nimport store from \"../Redux/index\"\n\n\nfunction MyGames() {\n    const [MyGameIds, setMyGameIds] = useState([])\n    const [CurrentGames, setCurrentGames] = useState([])\n    const [showGames, setShowGames] = useState([])\n\n    async function getMyGames(){\n        await db.collection('users').doc(store.getState().email).get().then((doc) => {\n            if(doc.exists){\n                setMyGameIds(doc.data().current_games)\n                console.log(\"Document data:\", doc.data()) \n                console.log(MyGameIds) \n            } \n            else{\n                 console.log(\"No such document!\")\n            }\n            }).catch((error) => {\n                console.log(\"Error getting document:\", error)\n            })\n    }\n\n    useEffect(() => { \n        // getMyGames().then(() => {\n        //     console.log(MyGameIds)\n        //     if(MyGameIds.length > 0){\n        //         db.collection(\"current_games\")\n        //             .get()\n        //             .then((querySnapshot) => {\n        //                 querySnapshot.forEach((doc) => {\n        //                     if(MyGameIds.indexOf(doc.id) !== -1){\n        //                         console.log(doc.id)\n        //                         let temp = showGames\n        //                         temp.push(doc)\n        //                         setShowGames(temp)\n        //                     }\n        //                 })\n        //             })\n        //             .catch((error) => {\n        //                 console.log(\"Error getting documents: \", error)\n        //             })  \n        //     }\n        //     else{\n        //         console.log(\"fuck\")\n        //     }\n        // })\n            // if(isMounted){\n            //     findMyGamesInfo()\n            // }\n        \n        //return () => {isMounted = false}\n       \n        // })\n        db.collection('users').doc(store.getState().email).get().then((doc) => {\n            if(doc.exists){\n                setMyGameIds(doc.data().current_games)\n                console.log(\"Document data:\", doc.data())\n                db.collection(\"current_games\")\n                    .get()\n                    .then((querySnapshot) => {\n                        querySnapshot.forEach((doc) => {\n                            setCurrentGames(...CurrentGames, doc)\n                            console.log(doc.id, \" => \", doc.data())\n                        })\n                        CurrentGames.forEach((doc) => {\n                            if(MyGameIds.indexOf(doc.id) !== -1){\n                                console.log(doc.id)\n                                setShowGames([...showGames, doc])\n                            }\n                        })\n                    })\n                    .catch((error) => {\n                        console.log(\"Error getting documents: \", error)\n                    })  \n            } \n            else{\n                 console.log(\"No such document!\")\n            }\n            }).catch((error) => {\n                console.log(\"Error getting document:\", error)\n            })\n    }, [])\n\n    function findMyGamesInfo(){\n        console.log(MyGameIds)\n        CurrentGames.forEach((doc) => {\n            if(MyGameIds.indexOf(doc.id) !== -1){\n                console.log(doc.id)\n                setShowGames([...showGames, doc])\n            }\n        })\n    }\n\n    return (\n        <div>\n            {showGames ? (\n                showGames.map((instance) => (\n                    <div className=\"game-style\">\n                        <h1>Name: {instance.data().name}</h1>\n                        <h1>creator: {instance.data().creator}</h1>\n                        \n                        <h2>Players: 1 / {instance.data().max_players}</h2>\n                        <h2>Starting Amount: {instance.data().starting_amount}</h2>\n                \n                        <h3>Duration: {instance.data().duration - 1} weeks</h3>\n                        <h3>Start date: {instance.data().start_date}</h3>\n                        <h3>End date: {instance.data().end_date}</h3>\n                        <h3>{instance.id}</h3>\n                    </div>\n                ))\n                ) : (\n                    <p>Loading games...</p>\n                )\n            }    \n        </div>\n    )\n}\n\n\nexport default MyGames\n","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/GameSession/GameSession.js",[],"/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/FindGames/FindGames.js",["95","96","97","98","99"],"import React, { useState, useEffect } from 'react'\nimport \"./FindGames.css\"\nimport { db } from \"../firebase\"\nimport store from \"../Redux/index\"\nimport firebase from \"firebase\"\nimport GameModal from \"../GameModal/GameModal\"\nimport IconButton from '@material-ui/core/IconButton';\n//import CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n\n\nfunction FindGames() {\n    const [games, setGames] = useState([])\n    const [filteredGame, setFilteredGame] = useState([])\n\n    const [open, setOpen] = useState(false);\n    const [modalGameInfo, setModalGameInfo] = useState(null)\n    const [search, setSearch] = useState(\"\");\n\n    var gameArr = [];\n\n    const handleClickOpen = (instance) => {\n      setOpen(true)\n      setModalGameInfo(instance)\n    }\n  \n    const handleClose = () => {\n      setOpen(false)\n    }\n\n    \n    \n    useEffect(() => { \n        let isMounted = true; // note this flag denote mount status\n\n        db.collection('current_games').onSnapshot(snapshot => {          \n            setGames(snapshot.docs.map(doc => doc))  \n            //snapshot.docs.map(doc => gameNames.push(doc.data().name)) \n        })\n        console.log(\"object\")\n\n        // docRef.get().then((doc) => {\n        //     if (doc.exists) {\n        //         console.log(\"Document data:\", doc.data());\n        //     } else {\n        //         // doc.data() will be undefined in this case\n        //         console.log(\"No such document!\");\n        //     }\n        // }).catch((error) => {\n        //     console.log(\"Error getting document:\", error);\n        // });\n\n        // db.collection(\"current_games\").where(\"max_players\", \">\", \"0\")\n        //     .get()\n        //     .then((querySnapshot) => {\n        //         querySnapshot.forEach((doc) => {\n        //             // doc.data() is never undefined for query doc snapshots\n        //             console.log(doc.id, \" => \", doc.data());\n        //             setGames([...games, doc.data()])\n        //             console.log(games)\n        //         });\n        //     })\n        //     .catch((error) => {\n        //         console.log(\"Error getting documents: \", error);\n        //     });\n\n        // db.collection(\"current_games\")\n        //     .onSnapshot()\n        //     .then((doc) => {\n        //         console.log(\"Current data: \", doc.data());\n        //         setGames([doc.data()])\n        //     })\n        //     .catch((err) => {\n        //         console.log(\"Error: \", err)\n        //     })\n        return () => { isMounted = false }; // use effect cleanup to set flag false\n    }, [])\n    \n    useEffect(() => {\n        let isMounted = true; // note this flag denote mount status\n        setFilteredGame(\n          games.filter((game) =>\n            game.data().name.toLowerCase().includes(search.toLowerCase())\n          )\n        );\n        return () => { isMounted = false }; // use effect cleanup to set flag false\n      }, [search, games]);\n\n    return (\n        <div>\n            <div className=\"searchbar\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search for a Game\"\n                        onChange={(e) => setSearch(e.target.value)}\n                    />\n                    <i className=\"fas fa-search\" id=\"searchGlass\"></i>\n                </div>\n            <div id = \"game-style\">\n                \n\n                {filteredGame.length === 0 ? (\n                    <p>No games found. Head over to \"Create a Game\" to create a new game session!</p>\n                ) : (\n                filteredGame.map((instance) => (\n                    <div>\n                        <div onClick={() => handleClickOpen(instance)} className=\"flip-card\">\n                            \n                               \n                                   \n                                    <div id=\"spanner\">\n                                        <h2><u>{instance.data().name}</u></h2>\n                                        <h3>Created By: {instance.data().creator}</h3>\n                                    </div>\n                                    <br />\n                                    <div id=\"Midspanner\">                                 \n                                        <h3>{instance.data().player_count} / {instance.data().max_players} <br /> Players</h3>\n                                    </div>\n                                    <br />\n                                    <div id=\"non-spanner\">\n                                        <h3>Starting Amount: {instance.data().starting_amount} USD</h3>\n                                        <h3>Start date: {instance.data().start_date}</h3>\n                                    </div>\n                            \n                                    {/* <div id=\"non-spanner\">\n                                        <h3>Start date: {instance.data().start_date}</h3>\n                                        <h3>End date: {instance.data().end_date}</h3>\n                                    </div> */}\n\n                                    \n\n                                    {/* <h3 id = \"id\" value = {`${instance.id}`}>{instance.id}</h3> */}\n                                \n                            \n                        </div>\n                    </div>      \n                )))\n                } \n            </div>  \n\n            <Dialog style = {{maxWidth: \"100%\"}} fullScreen open = {open}>\n                <Toolbar style = {{maxWidth: \"90%\"}}> \n                    <IconButton edge=\"start\" color=\"black\" onClick={handleClose} aria-label=\"close\">\n                        <p>Go Back </p>\n                    </IconButton>\n                </Toolbar>\n                <GameModal gameInfo={modalGameInfo} />\n            </Dialog> \n        </div>\n    )\n}\n\nexport default FindGames","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Portfolio/Portfolio.js",["100","101","102"],"/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/test/test.js",["103","104"],"import React from 'react'\nimport \"./test.css\"\n\nfunction Test() {\n    return (\n        <div>                \n            <div id=\"blurry-filter\"></div>\n            <header>\n            <div>\n                <article id=\"title\"><span className=\"parent\">Fantasy</span><br/><span className=\"name\">Markets</span></article>\n                <article id=\"reference\"><a href=\"https://dribbble.com/shots/3956995-Apple-OS-MacOS-Finder-UI-motion\" target=\"_blank\" rel=\"noopener\">\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 32 32\">\n                    <path fill=\"currentcolor\" d=\"M16 0C7.16703 0 0 7.16703 0 16C0 24.833 7.16703 32 16 32C24.8156 32 32 24.833 32 16C32 7.16703 24.8156 0 16 0ZM26.5683 7.37527C28.4772 9.70065 29.6226 12.6681 29.6573 15.8785C29.2061 15.7918 24.6941 14.872 20.1475 15.4447C20.0434 15.2191 19.9566 14.9761 19.8525 14.7332C19.5748 14.0738 19.2625 13.397 18.9501 12.7549C23.9826 10.7072 26.2733 7.75705 26.5683 7.37527ZM16 2.36009C19.4707 2.36009 22.6464 3.66161 25.0586 5.7961C24.8156 6.14317 22.7505 8.90239 17.8915 10.7245C15.6529 6.61171 13.1714 3.24512 12.7896 2.72451C13.8134 2.48156 14.8894 2.36009 16 2.36009ZM10.1866 3.64425C10.551 4.13015 12.9805 7.5141 15.2538 11.5401C8.86768 13.2408 3.22777 13.2061 2.62039 13.2061C3.50542 8.9718 6.36876 5.44902 10.1866 3.64425ZM2.32538 16.0174C2.32538 15.8785 2.32538 15.7397 2.32538 15.6009C2.9154 15.6182 9.54447 15.705 16.3644 13.6573C16.7636 14.4208 17.128 15.2017 17.4751 15.9826C17.3015 16.0347 17.1106 16.0868 16.9371 16.1388C9.89154 18.4121 6.14317 24.6247 5.8308 25.1453C3.6616 22.7332 2.32538 19.5228 2.32538 16.0174ZM16 29.6746C12.8416 29.6746 9.92625 28.5987 7.61822 26.7939C7.86117 26.2907 10.6377 20.9458 18.3427 18.256C18.3774 18.2386 18.3948 18.2386 18.4295 18.2213C20.3557 23.2017 21.1367 27.3839 21.3449 28.5813C19.6963 29.2928 17.8915 29.6746 16 29.6746ZM23.6182 27.3319C23.4794 26.4989 22.7505 22.5076 20.9631 17.5965C25.2495 16.9197 28.9978 18.0304 29.4664 18.1866C28.8764 21.987 26.6898 25.2668 23.6182 27.3319Z\"></path>\n                    </svg></a><a href=\"https://codepen.io/iamvdo/pen/xECmI\" target=\"_blank\" rel=\"noopener\">\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                    <path fill=\"currentcolor\" d=\"M15.09 12L12 14.08v.01L8.91 12 12 9.92 15.09 12M12 2a.93.93 0 00-.47.15L2.5 8.11c-.23.11-.41.32-.5.56v6.25c0 .41 0 .41.15.61l9.38 6.33c.14.1.31.14.47.14.16 0 .33-.05.47-.15l9.38-6.35c.15-.17.15-.17.15-.58V8.67a1.04 1.04 0 00-.5-.57l-9.03-5.95A.843.843 0 0012 2m4.58 11l3.01 2.04-6.76 4.56v-4.07L16.58 13m3.11-4.1L16.58 11l-3.75-2.53V4.38l6.86 4.52m.64 1.57v3.06L18.07 12l2.26-1.53M7.42 13l3.75 2.54v4.06l-6.76-4.56L7.42 13M4.31 8.9l6.86-4.51V8.5L7.42 11 4.31 8.9m-.64 1.6L5.93 12l-2.26 1.54V10.5z\"></path>\n                    </svg></a></article>\n            </div>\n            </header>\n            <section id=\"folders\">\n            <article>Find Games</article>\n            <article>My Games</article>\n            <article>Profile</article>\n            </section>\n            <main>\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1593414220166-085caeae0382?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=751&amp;q=80)\"}}>\n                <figcaption>City-01</figcaption>\n            </figure>\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1593532847202-e818146e134a?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=750&amp;q=80)\"}}>\n                <figcaption>Painting-01</figcaption>\n            </figure>\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1593260654451-a214d27978fb?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=375&amp;q=80)\"}}>\n                <figcaption>Train-01</figcaption>\n            </figure>\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1593515529105-cec0bd21e1f7?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=750&amp;q=80)\"}}>\n                <figcaption>Sky-01</figcaption>\n            </figure>\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1593377872300-67454a2954e1?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=673&amp;q=80)\"}}>\n                <figcaption>Citi-02</figcaption>\n            </figure>\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1592185285645-5b9d0b13743c?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=750&amp;q=80)\"}}>\n                <figcaption>Painting-02</figcaption>\n            </figure>\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1593260654784-4aa47cd0c803?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=375&amp;q=80)\"}}>\n                <figcaption>City-03</figcaption>\n            </figure>\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1593174942395-f7bc79522493?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=375&amp;q=80)\"}}>\n                <figcaption>Nature-01</figcaption>\n            </figure>\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1593055132632-6aeec3f1dc00?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=750&amp;q=80)\"}}>\n                <figcaption>Nature-02</figcaption>\n            </figure>\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1593201007276-bd95963531b2?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=334&amp;q=80)\"}}>\n                <figcaption>Sky-02</figcaption>\n            </figure>\n            <figure style={{backgroundImage: \"url(https://images.unsplash.com/photo-1593157729036-ad7c7bb719c6?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=375&amp;q=80)\"}}>\n                <figcaption>City-04</figcaption>\n            </figure>\n            </main>\n            <footer></footer> \n        </div>\n    )\n}\n\nexport default Test\n","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/firebase.js",[],"/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/GameModal/GameModal.js",["105"],"import React, {useEffect, useState} from 'react'\nimport firebase from \"firebase\"\nimport { db } from \"../firebase\"\nimport store from \"../Redux/index\"\nimport \"./GameModal.css\"\nimport EditPortfolio, { ViewPortfolio } from \"../Portfolio/Portfolio\"\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\n\n\n\nfunction GameModal({ gameInfo }) {\n    const [Portfolio, setPortfolio] = useState()\n    const [players, setPlayers] = useState([])\n    const [Tokens, setTokens] = useState([])\n    const [view,setView] = useState(false);\n    const [editPort,setEditPort] = useState(false);\n\n    useEffect(() => {\n        gameInfo.data().players.forEach((player) => {setPlayers([...players, player])})\n    }, [])\n\n    function joinGameSession(e){\n        e.preventDefault()\n        if(!gameInfo.data()[store.getState().username]){\n            db.collection(\"current_games\").doc(e.target.value).update({\n                player_count: firebase.firestore.FieldValue.increment(1),\n                [store.getState().username]: {cash: Number(gameInfo.data().starting_amount), canEdit: true},\n                players: firebase.firestore.FieldValue.arrayUnion( store.getState().username )\n            })  \n            db.collection(\"users\").doc(store.getState().username).update({\n                current_games: firebase.firestore.FieldValue.arrayUnion(e.target.value)\n            })\n            store.dispatch({     // store user info in global state \n                type: \"UPDATE_GAMES\",\n                payload: {\n                    MyGames: [...store.getState().username, e.target.value]        \n                } \n            }) \n        }\n\n        // if(players.indexOf(store.getState().email) === -1){\n        //     db.collection(\"current_games\").doc(e.target.value).update({\n        //         player_count: firebase.firestore.FieldValue.increment(1),\n        //         players: firebase.firestore.FieldValue.arrayUnion( {[store.getState().email]: {cash: gameInfo.data().starting_amount}} )  \n        //     })\n        //     db.collection(\"users\").doc(`${store.getState().userInfo.email}`).update({\n        //         current_games: firebase.firestore.FieldValue.arrayUnion(e.target.value)\n        //     })\n        // }\n    }\n\n    function displayEditPortfolio(username, portfolio){\n        setEditPort(true);\n        setPortfolio(<EditPortfolio username={username} gameId={gameInfo.id} portfolio={portfolio} />)\n    }\n\n    const [dailyCoinPrices, setDailyCoinPrices] = useState({})\n    function displayViewPortfolio(username, portfolio){\n        db.collection('coin_prices').onSnapshot(snapshot => {  \n            snapshot.docs.map(doc => (\n                //console.log(doc.id)\n                //console.log(doc.data().value)\n                //setAssets({...assets, [name]: Number(convertedPrice)}) \n                setDailyCoinPrices({...dailyCoinPrices, [doc.id] : Number(doc.data().value)})  \n            )) \n        })     \n   \n        setTokens(\n            Object.keys(portfolio).map((coin) => ( coin ))     \n        )\n\n        setTimeout(() => {}, 2000)\n\n        console.log(Tokens)\n        setView(true)\n        setPortfolio(<ViewPortfolio username={username} portfolio={portfolio} tokens={Tokens} />)\n    }\n    const viewClose = () => {\n        setView(false);\n    }\n    const editPortClose = () => {\n        setEditPort(false);\n    }\n\n    return (\n        <div>\n            <div id=\"game-info\">\n                <div id=\"game-name-creator\">\n                    <h1><u>{gameInfo.data().name}</u></h1>\n                    <h3>Created by {gameInfo.data().creator}</h3>\n                </div>\n        \n                <div className = \"game-information\">\n                    <h2><u>Game Information:</u></h2>\n                    <h3>Starting Amount: {gameInfo.data().starting_amount} USD</h3>\n                    <br/>\n                    <br/>\n                    <h3 id= \"number\">{gameInfo.data().player_count} / {gameInfo.data().max_players} <br /> Players</h3>\n                    <br/>\n                    <br />\n\n                    <h3>Duration: {gameInfo.data().duration - 1} {gameInfo.data().duration - 1 === 1 ? `week`: `weeks`}</h3>\n                    <br/>\n                    <h3>Start date:<br/>{gameInfo.data().start_date}</h3>\n                    <br/>\n                    <h3>End date: <br/>{gameInfo.data().end_date}</h3>\n                                    \n                    \n                </div>\n            </div>\n         \n            {gameInfo.data().players.indexOf(store.getState().username) === -1 && gameInfo.data().player_count < gameInfo.data().max_players ? (\n                <div>\n                    <button id=\"gameId\" value={`${gameInfo.id}`} onClick={(e) => {joinGameSession(e)}}>Enter Game</button> \n                </div>\n            ): (\n                <p></p>\n            )\n            }\n\n            <div id=\"game-players\">\n                <h2>Current Players:</h2>\n                {gameInfo.data().players ? (\n                    console.log(gameInfo.data().mopatel1214),\n                    gameInfo.data().players.map((player) => (\n                        <div id=\"leaderboard\">\n                                                    \n                            <span>{player}</span>\n                           \n                            <span id=\"portfolio-btns\">\n                                {store.getState().username === player && gameInfo.data()[player][\"canEdit\"] ? (\n                                    <span>\n                                        <span onClick={() => {displayEditPortfolio(player, gameInfo.data()[player])}} className=\"edit-portfolio-btn\"><u>Edit Portfolio</u></span>\n                                        <span onClick={() => {displayViewPortfolio(player, gameInfo.data()[player])}} className=\"view-portfolio-btn\"><u>View Portfolio</u></span>\n                                    </span>\n                                    ) : (\n                                        <span onClick={() => {displayViewPortfolio(player, gameInfo.data()[player])}} className=\"view-portfolio-btn\"><u>View Portfolio</u></span>\n                                    )\n                                }\n                            </span>            \n                        </div>\n                    ))\n                ): (\n                    <p>No Players Found</p>\n                )\n                }\n                </div>\n\n            <div className = \"rules\">\n                <h1>General Rules</h1>\n                <h3>1.) Rule #1</h3>\n                <h3>2.) Rule #2</h3>\n                <h3>3.) Rule #3</h3>\n                <h3>4.) Rule #4</h3>\n                <h3>5.) Rule #5</h3>\n            </div>\n\n            {/* The Modal for Viewing your Portfolio */}\n            <Dialog fullWidth maxWidth={'sm'} open = {view}>\n                <IconButton edge=\"start\" color=\"black\" onClick={viewClose} aria-label=\"close\">\n                    <p>Close</p>\n                </IconButton>\n                <div>{Portfolio}</div>\n            </Dialog>\n\n                {/* The Modal for Creating Your Portfolio */}\n            <Dialog fullWidth maxWidth={'md'} open = {editPort}>\n                <IconButton edge=\"start\" color=\"black\" onClick={editPortClose} aria-label=\"close\">\n                    <p>Close</p>\n                </IconButton>\n                <div>{Portfolio}</div>\n            </Dialog>\n        </div>\n      \n    )\n}\n\nexport default GameModal\n","/Users/kevinguillaume/Desktop/DS-Visualizer/Data-Structures-Algorithms-Visualizer/src/Crypto/Crypto.js",["106","107"],"import React, {useState, useEffect, prevState} from 'react'\r\nimport \"./Crypto.css\"\r\nconst rp = require('request-promise');\r\n// uri: 'https://cors-anywhere.herokuapp.com/https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest'\r\n\r\n\r\nfunction Crypto({portfolio}) {\r\n    const [price, setPrice] = useState(1)\r\n    const [coinAmount, setCoinAmount] = useState(1)\r\n    //const [prices, setPrices] = useState([0])\r\n\r\n    function getCoinInfo(currency, amount){\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            uri: 'https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest',\r\n            qs: {\r\n              'slug': currency,\r\n            },\r\n            \r\n            headers: {\r\n              'X-CMC_PRO_API_KEY': \"1d62807d-b858-4715-9a04-5fdfb1414cb0\"\r\n            },\r\n            json: true,\r\n            gzip: true\r\n          };\r\n          \r\n    \r\n          rp(requestOptions).then(response => {\r\n            console.log('API call response:', response)\r\n            setPrice(response.data[Object.keys(response.data)[0]].quote.USD.price)\r\n            //setPrices([...prices, price])\r\n            console.log(Number(amount) / price)\r\n            setCoinAmount(Math.round((Number(amount) / price) * 10000) / 10000)\r\n          }).catch((err) => {\r\n            console.log('API call error:', err.message)\r\n            setCoinAmount(1)\r\n          })\r\n          return coinAmount\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {Object.keys(portfolio).map(currency => (\r\n                <div>\r\n                    <div className = \"coin-info\">\r\n                        <p className=\"item\">Name: {currency}</p>\r\n                        <p className=\"item\">Amount Invested: ${portfolio[currency]} USD</p>\r\n                        <p className=\"item\">Current position: <strong>{getCoinInfo(currency, portfolio[currency])} {currency}</strong></p>\r\n                    </div>       \r\n                </div>\r\n            ))\r\n            }    \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Crypto\r\n\r\n\r\n\r\n",["108","109"],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":1,"column":16,"nodeType":"116","messageId":"117","endLine":1,"endColumn":24},{"ruleId":"114","severity":1,"message":"118","line":1,"column":26,"nodeType":"116","messageId":"117","endLine":1,"endColumn":35},{"ruleId":"114","severity":1,"message":"119","line":4,"column":8,"nodeType":"116","messageId":"117","endLine":4,"endColumn":16},{"ruleId":"114","severity":1,"message":"120","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":19},{"ruleId":"114","severity":1,"message":"121","line":13,"column":8,"nodeType":"116","messageId":"117","endLine":13,"endColumn":12},{"ruleId":"114","severity":1,"message":"122","line":14,"column":8,"nodeType":"116","messageId":"117","endLine":14,"endColumn":17},{"ruleId":"123","severity":1,"message":"124","line":39,"column":19,"nodeType":"125","endLine":39,"endColumn":22},{"ruleId":"126","severity":1,"message":"127","line":40,"column":21,"nodeType":"125","endLine":40,"endColumn":77},{"ruleId":"114","severity":1,"message":"128","line":10,"column":12,"nodeType":"116","messageId":"117","endLine":10,"endColumn":20},{"ruleId":"114","severity":1,"message":"129","line":11,"column":12,"nodeType":"116","messageId":"117","endLine":11,"endColumn":16},{"ruleId":"114","severity":1,"message":"130","line":14,"column":26,"nodeType":"116","messageId":"117","endLine":14,"endColumn":41},{"ruleId":"131","severity":1,"message":"132","line":46,"column":8,"nodeType":"133","endLine":46,"endColumn":10,"suggestions":"134"},{"ruleId":"114","severity":1,"message":"118","line":1,"column":16,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"135","line":12,"column":20,"nodeType":"116","messageId":"117","endLine":12,"endColumn":30},{"ruleId":"131","severity":1,"message":"136","line":86,"column":8,"nodeType":"133","endLine":86,"endColumn":10,"suggestions":"137"},{"ruleId":"114","severity":1,"message":"138","line":88,"column":14,"nodeType":"116","messageId":"117","endLine":88,"endColumn":29},{"ruleId":"114","severity":1,"message":"139","line":4,"column":8,"nodeType":"116","messageId":"117","endLine":4,"endColumn":13},{"ruleId":"114","severity":1,"message":"140","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":16},{"ruleId":"114","severity":1,"message":"141","line":22,"column":9,"nodeType":"116","messageId":"117","endLine":22,"endColumn":16},{"ruleId":"114","severity":1,"message":"142","line":78,"column":24,"nodeType":"116","messageId":"117","endLine":78,"endColumn":33},{"ruleId":"114","severity":1,"message":"142","line":88,"column":24,"nodeType":"116","messageId":"117","endLine":88,"endColumn":33},{"ruleId":"114","severity":1,"message":"143","line":15,"column":12,"nodeType":"116","messageId":"117","endLine":15,"endColumn":17},{"ruleId":"114","severity":1,"message":"144","line":20,"column":20,"nodeType":"116","messageId":"117","endLine":20,"endColumn":31},{"ruleId":"131","severity":1,"message":"145","line":204,"column":8,"nodeType":"133","endLine":204,"endColumn":37,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":11,"column":41,"nodeType":"125","endLine":11,"endColumn":149},{"ruleId":"147","severity":1,"message":"148","line":14,"column":31,"nodeType":"125","endLine":14,"endColumn":108},{"ruleId":"131","severity":1,"message":"149","line":21,"column":8,"nodeType":"133","endLine":21,"endColumn":10,"suggestions":"150"},{"ruleId":"114","severity":1,"message":"118","line":1,"column":26,"nodeType":"116","messageId":"117","endLine":1,"endColumn":35},{"ruleId":"114","severity":1,"message":"151","line":1,"column":37,"nodeType":"116","messageId":"117","endLine":1,"endColumn":46},{"ruleId":"110","replacedBy":"152"},{"ruleId":"112","replacedBy":"153"},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Investor' is defined but never used.","'GameSession' is defined but never used.","'Test' is defined but never used.","'Portfolio' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'userInfo' is assigned a value but never used.","'name' is assigned a value but never used.","'setCurrentGames' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.","ArrayExpression",["156"],"'getMyGames' is defined but never used.","React Hook useEffect has missing dependencies: 'CurrentGames', 'MyGameIds', and 'showGames'. Either include them or remove the dependency array. You can also do a functional update 'setCurrentGames(C => ...)' if you only need 'CurrentGames' in the 'setCurrentGames' call.",["157"],"'findMyGamesInfo' is defined but never used.","'store' is defined but never used.","'firebase' is defined but never used.","'gameArr' is assigned a value but never used.","'isMounted' is assigned a value but never used.","'price' is assigned a value but never used.","'getCoinInfo' is defined but never used.","React Hook useEffect has a missing dependency: 'getMarkers'. Either include it or remove the dependency array.",["158"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","React Hook useEffect has missing dependencies: 'gameInfo' and 'players'. Either include them or remove the dependency array. You can also do a functional update 'setPlayers(p => ...)' if you only need 'players' in the 'setPlayers' call.",["159"],"'prevState' is defined but never used.",["154"],["155"],"no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [username]",{"range":"168","text":"169"},"Update the dependencies array to be: [CurrentGames, MyGameIds, showGames]",{"range":"170","text":"171"},"Update the dependencies array to be: [portfolio, username, tokens, getMarkers]",{"range":"172","text":"173"},"Update the dependencies array to be: [gameInfo, players]",{"range":"174","text":"175"},[1439,1441],"[username]",[3189,3191],"[CurrentGames, MyGameIds, showGames]",[9278,9307],"[portfolio, username, tokens, getMarkers]",[739,741],"[gameInfo, players]"]