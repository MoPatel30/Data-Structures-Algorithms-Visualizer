[{"C:\\Users\\mopat\\dsav-363\\src\\index.js":"1","C:\\Users\\mopat\\dsav-363\\src\\App.js":"2","C:\\Users\\mopat\\dsav-363\\src\\reportWebVitals.js":"3","C:\\Users\\mopat\\dsav-363\\src\\Stocks\\Stocks.js":"4","C:\\Users\\mopat\\dsav-363\\src\\Crypto\\Crypto.js":"5","C:\\Users\\mopat\\dsav-363\\src\\Portfolio\\Portfolio.js":"6","C:\\Users\\mopat\\dsav-363\\src\\Investors\\Investor.js":"7","C:\\Users\\mopat\\dsav-363\\src\\GameSession\\GameSession.js":"8","C:\\Users\\mopat\\dsav-363\\src\\Redux\\index.js":"9","C:\\Users\\mopat\\dsav-363\\src\\Login\\Login.js":"10","C:\\Users\\mopat\\dsav-363\\src\\firebase.js":"11"},{"size":581,"mtime":1614314983462,"results":"12","hashOfConfig":"13"},{"size":2146,"mtime":1615340976829,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1611697990428,"results":"15","hashOfConfig":"13"},{"size":287,"mtime":1612417766623,"results":"16","hashOfConfig":"13"},{"size":1894,"mtime":1615340976833,"results":"17","hashOfConfig":"13"},{"size":2021,"mtime":1614659397559,"results":"18","hashOfConfig":"13"},{"size":892,"mtime":1613622241705,"results":"19","hashOfConfig":"13"},{"size":747,"mtime":1615340976836,"results":"20","hashOfConfig":"13"},{"size":451,"mtime":1614654954653,"results":"21","hashOfConfig":"13"},{"size":1836,"mtime":1615340976839,"results":"22","hashOfConfig":"13"},{"size":266,"mtime":1615341494079,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1v82fgt",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mopat\\dsav-363\\src\\index.js",[],["53","54"],"C:\\Users\\mopat\\dsav-363\\src\\App.js",["55","56"],"C:\\Users\\mopat\\dsav-363\\src\\reportWebVitals.js",[],"C:\\Users\\mopat\\dsav-363\\src\\Stocks\\Stocks.js",["57","58"],"import React, {useEffect, useState} from 'react'\r\nimport \"./Stocks.css\"\r\nimport axios from \"axios\"\r\n\r\n\r\n\r\nfunction Stocks() {\r\n  \r\n    useEffect(() => {\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Stocks</h1>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Stocks\r\n","C:\\Users\\mopat\\dsav-363\\src\\Crypto\\Crypto.js",["59","60"],"import React, {useState, useEffect, prevState} from 'react'\r\nimport \"./Crypto.css\"\r\nconst rp = require('request-promise');\r\n\r\n\r\n\r\nfunction Crypto({portfolio}) {\r\n    const [price, setPrice] = useState(\"\")\r\n    //const [prices, setPrices] = useState([0])\r\n\r\n    function getCoinInfo(currency, amount){\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            uri: 'https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest',\r\n            qs: {\r\n              'slug': currency,\r\n            },\r\n            //3164df64-a813-4a8b-a580-b2e741064780\r\n            headers: {\r\n              'X-CMC_PRO_API_KEY': ''\r\n            },\r\n            json: true,\r\n            gzip: true\r\n          };\r\n          \r\n          rp(requestOptions).then(response => {\r\n            console.log('API call response:', response)\r\n            setPrice(String(response.data[Object.keys(response.data)[0]].quote.USD.price))\r\n            //setPrices([...prices, price])\r\n            return amount / price\r\n          }).catch((err) => {\r\n            console.log('API call error:', err.message)\r\n            return 0\r\n          })\r\n\r\n    }\r\n\r\n    /*\r\n        <input type = \"text\" placeholder=\"Enter currency name\" onChange = {(e) => setName(e.target.value)}></input>\r\n        <button type = \"submit\" onClick = {getCoinInfo}>Enter</button>\r\n            \r\n    */\r\n\r\n    return (\r\n        <div>\r\n           \r\n            {Object.keys(portfolio).map(currency => (\r\n                <div>\r\n                    <div className = \"coin-info\">\r\n                        <p>Name: {currency}</p>\r\n                        <p>Amount Invested: {portfolio[currency]} USD</p>\r\n                        <p>Current position: {getCoinInfo(currency, portfolio[currency])} {currency}</p>\r\n                    </div>\r\n                   \r\n                </div>\r\n            ))\r\n            }\r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Crypto\r\n\r\n\r\n\r\n","C:\\Users\\mopat\\dsav-363\\src\\Portfolio\\Portfolio.js",["61","62","63"],"import React, {useState} from 'react'\r\nimport Crypto from \"../Crypto/Crypto\"\r\nimport \"./Portfolio.css\"\r\nimport { connect } from 'react-redux'\r\nimport store from \".././Redux/index\"\r\nimport {auth, provider} from \"../firebase.js\"\r\n\r\n\r\n\r\nfunction Portfolio({username}) {\r\n    const [amount, setAmount] = useState(10000)\r\n    const [assets, setAssets] = useState({})\r\n    const [coinName, setCoinName] = useState(\"\")\r\n    const [coinAmount, setCoinAmount] = useState(0)\r\n    const [numberOfCoins, setNumberOfCoins] = useState(5)\r\n\r\n    function addCoin(){\r\n        if(amount - coinAmount < 0){\r\n            alert(\"Not enough funds remaining\")\r\n        }\r\n        if(numberOfCoins <= 0){\r\n            alert(\"You are only allowed a maximum of 5 coins. Please rebalance your portfolio if you wish to use your remaining cash.\")\r\n        }\r\n        else{\r\n            let name = coinName\r\n\r\n            setAssets({...assets, [name]: coinAmount}) \r\n           \r\n            setAmount(amount - coinAmount)\r\n            setNumberOfCoins(numberOfCoins - 1)\r\n          \r\n            setCoinName(\"\")\r\n            setCoinAmount(0)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = \"portfolio\">           \r\n            <h1><u className = \"title\">{username}'s Portfolio</u></h1>\r\n\r\n            <div className = \"add-coin\">\r\n                <p>Coins remaining: {numberOfCoins} </p>\r\n                <p>Funds remaining: {amount}</p>\r\n\r\n                <input type = \"text\" placeholder = \"Full coin name\" onChange = {(e) => setCoinName(e.target.value)}></input>\r\n                <input type = \"number\" placeholder = \"Amount in USD\" onChange = {(e) => setCoinAmount(e.target.value)}></input>\r\n                <button type = \"submit\" onClick = {addCoin}> Add coin </button>\r\n            </div>\r\n\r\n            <Crypto portfolio = {assets} />   \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    username: state.username,\r\n    userInfo: state.userInfo\r\n})\r\n\r\n\r\nexport default (connect)(mapStateToProps)(Portfolio)","C:\\Users\\mopat\\dsav-363\\src\\Investors\\Investor.js",["64"],"import React, {useEffect, useState} from 'react'\r\nimport \"./Investor.css\"\r\nimport Portfolio from \"../Portfolio/Portfolio\"\r\n\r\n\r\n\r\nfunction Investor() {\r\n    const [name, setName] = useState(\"\")\r\n    const [investors, setInvestors] = useState([\"Mo Patel\"])\r\n\r\n\r\n    function addInvestor(){\r\n        investors.length < 10 ? setInvestors([...investors, name]) : alert(\"Max players reached\")\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <label>Name: </label>\r\n            <input type = \"text\" placeholder = \"Name\" onChange = {(e) => setName(e.target.value)}></input>\r\n            <button type = \"submit\" onClick = {addInvestor}>Add user</button>\r\n            \r\n            {investors.map(investor => (\r\n                <div>\r\n                    <Portfolio name = {investor} />\r\n                </div>\r\n            ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Investor\r\n","C:\\Users\\mopat\\dsav-363\\src\\GameSession\\GameSession.js",["65","66"],"import React, {useEffect, useState} from 'react'\r\nimport \"./GameSession.css\"\r\n\r\n\r\nfunction GameSession({gameInfo}) {\r\n    return (\r\n        <div className = \"gameInfo\">\r\n\r\n            <p>\r\n                {gameInfo.first}\r\n            </p>\r\n            <p>\r\n                {gameInfo.last}\r\n            </p>\r\n            <p>\r\n                {gameInfo.born}\r\n            </p>\r\n    \r\n            <div>\r\n\r\n                {/* {gameInfo.players.map(player => (\r\n                    <div>\r\n                        <p>{player}</p>\r\n                    </div>\r\n                ))\r\n                } */}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameSession\r\n","C:\\Users\\mopat\\dsav-363\\src\\Redux\\index.js",[],"C:\\Users\\mopat\\dsav-363\\src\\Login\\Login.js",["67","68","69"],"import React, {useState} from 'react'\r\nimport \"./Login.css\"\r\nimport { connect } from 'react-redux'\r\nimport store from \".././Redux/index\"\r\nimport {auth, provider, db} from \"../firebase.js\"\r\nimport firebase from \"firebase\"\r\n\r\n\r\nexport const Login = (props) => {\r\n    const [userInfo, updateUserInfo] = useState(null)\r\n    const [name, setName] = useState(store.getState().username)\r\n\r\n    const signIn = () => {\r\n        auth.setPersistence(firebase.auth.Auth.Persistence.SESSION)\r\n            .then(function() {\r\n                auth\r\n                .signInWithPopup(provider)\r\n                .then((result) =>{\r\n                    console.log(result)  \r\n                    updateUserInfo(result.user.displayName, result)\r\n                    store.dispatch({\r\n                        type: \"ADD_POST\",\r\n                        payload: {\r\n                            username: result.user.displayName,\r\n                            userInfo: result.user,\r\n                        } \r\n                    }) \r\n                    setName(result.user.displayName)\r\n                })\r\n                .catch((error) => alert(error.message)) \r\n            })\r\n    }\r\n    \r\n    return (\r\n        <div className=\"background\">\r\n\r\n            <div className=\"body\">\r\n                <h1 className=\"header\">Fantasy Markets</h1>\r\n\r\n                <h4 className=\"slogan\">Strategize, Invest, and take your portfolio <em>to the moon!</em></h4>\r\n\r\n                <button className=\"google\" onClick={signIn}>Google</button>   \r\n            </div>\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    username: state.username,\r\n    userInfo: state.userInfo\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        dispatch\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n","C:\\Users\\mopat\\dsav-363\\src\\firebase.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":14},{"ruleId":"74","severity":1,"message":"78","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":17},{"ruleId":"74","severity":1,"message":"79","line":1,"column":27,"nodeType":"76","messageId":"77","endLine":1,"endColumn":35},{"ruleId":"74","severity":1,"message":"80","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":13},{"ruleId":"74","severity":1,"message":"81","line":1,"column":26,"nodeType":"76","messageId":"77","endLine":1,"endColumn":35},{"ruleId":"74","severity":1,"message":"82","line":1,"column":37,"nodeType":"76","messageId":"77","endLine":1,"endColumn":46},{"ruleId":"74","severity":1,"message":"83","line":5,"column":8,"nodeType":"76","messageId":"77","endLine":5,"endColumn":13},{"ruleId":"74","severity":1,"message":"84","line":6,"column":9,"nodeType":"76","messageId":"77","endLine":6,"endColumn":13},{"ruleId":"74","severity":1,"message":"85","line":6,"column":15,"nodeType":"76","messageId":"77","endLine":6,"endColumn":23},{"ruleId":"74","severity":1,"message":"81","line":1,"column":16,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"81","line":1,"column":16,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"79","line":1,"column":27,"nodeType":"76","messageId":"77","endLine":1,"endColumn":35},{"ruleId":"74","severity":1,"message":"86","line":5,"column":25,"nodeType":"76","messageId":"77","endLine":5,"endColumn":27},{"ruleId":"74","severity":1,"message":"87","line":10,"column":12,"nodeType":"76","messageId":"77","endLine":10,"endColumn":20},{"ruleId":"74","severity":1,"message":"88","line":11,"column":12,"nodeType":"76","messageId":"77","endLine":11,"endColumn":16},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'Stocks' is defined but never used.","Identifier","unusedVar","'Portfolio' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.","'prevState' is defined but never used.","'store' is defined but never used.","'auth' is defined but never used.","'provider' is defined but never used.","'db' is defined but never used.","'userInfo' is assigned a value but never used.","'name' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]