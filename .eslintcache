[{"C:\\Users\\mopat\\dsav-363\\src\\index.js":"1","C:\\Users\\mopat\\dsav-363\\src\\App.js":"2","C:\\Users\\mopat\\dsav-363\\src\\reportWebVitals.js":"3","C:\\Users\\mopat\\dsav-363\\src\\Crypto\\Crypto.js":"4","C:\\Users\\mopat\\dsav-363\\src\\Portfolio\\Portfolio.js":"5","C:\\Users\\mopat\\dsav-363\\src\\Investors\\Investor.js":"6","C:\\Users\\mopat\\dsav-363\\src\\GameSession\\GameSession.js":"7","C:\\Users\\mopat\\dsav-363\\src\\Redux\\index.js":"8","C:\\Users\\mopat\\dsav-363\\src\\Login\\Login.js":"9","C:\\Users\\mopat\\dsav-363\\src\\firebase.js":"10","C:\\Users\\mopat\\dsav-363\\src\\CreateGame\\CreateGame.js":"11","C:\\Users\\mopat\\dsav-363\\src\\Profile\\Profile.js":"12","C:\\Users\\mopat\\dsav-363\\src\\FindGames\\FindGames.js":"13"},{"size":581,"mtime":1614314983462,"results":"14","hashOfConfig":"15"},{"size":2884,"mtime":1615433021669,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1611697990428,"results":"17","hashOfConfig":"15"},{"size":1894,"mtime":1615340976833,"results":"18","hashOfConfig":"15"},{"size":2021,"mtime":1614659397559,"results":"19","hashOfConfig":"15"},{"size":892,"mtime":1613622241705,"results":"20","hashOfConfig":"15"},{"size":724,"mtime":1615350683598,"results":"21","hashOfConfig":"15"},{"size":509,"mtime":1615348798845,"results":"22","hashOfConfig":"15"},{"size":3483,"mtime":1615348776389,"results":"23","hashOfConfig":"15"},{"size":266,"mtime":1615435587786,"results":"24","hashOfConfig":"15"},{"size":3007,"mtime":1615435089202,"results":"25","hashOfConfig":"15"},{"size":1656,"mtime":1615350670269,"results":"26","hashOfConfig":"15"},{"size":2530,"mtime":1615435558344,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1v82fgt",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mopat\\dsav-363\\src\\index.js",[],["60","61"],"C:\\Users\\mopat\\dsav-363\\src\\App.js",[],"C:\\Users\\mopat\\dsav-363\\src\\reportWebVitals.js",[],"C:\\Users\\mopat\\dsav-363\\src\\Crypto\\Crypto.js",["62","63"],"import React, {useState, useEffect, prevState} from 'react'\r\nimport \"./Crypto.css\"\r\nconst rp = require('request-promise');\r\n\r\n\r\n\r\nfunction Crypto({portfolio}) {\r\n    const [price, setPrice] = useState(\"\")\r\n    //const [prices, setPrices] = useState([0])\r\n\r\n    function getCoinInfo(currency, amount){\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            uri: 'https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest',\r\n            qs: {\r\n              'slug': currency,\r\n            },\r\n            //3164df64-a813-4a8b-a580-b2e741064780\r\n            headers: {\r\n              'X-CMC_PRO_API_KEY': ''\r\n            },\r\n            json: true,\r\n            gzip: true\r\n          };\r\n          \r\n          rp(requestOptions).then(response => {\r\n            console.log('API call response:', response)\r\n            setPrice(String(response.data[Object.keys(response.data)[0]].quote.USD.price))\r\n            //setPrices([...prices, price])\r\n            return amount / price\r\n          }).catch((err) => {\r\n            console.log('API call error:', err.message)\r\n            return 0\r\n          })\r\n\r\n    }\r\n\r\n    /*\r\n        <input type = \"text\" placeholder=\"Enter currency name\" onChange = {(e) => setName(e.target.value)}></input>\r\n        <button type = \"submit\" onClick = {getCoinInfo}>Enter</button>\r\n            \r\n    */\r\n\r\n    return (\r\n        <div>\r\n           \r\n            {Object.keys(portfolio).map(currency => (\r\n                <div>\r\n                    <div className = \"coin-info\">\r\n                        <p>Name: {currency}</p>\r\n                        <p>Amount Invested: {portfolio[currency]} USD</p>\r\n                        <p>Current position: {getCoinInfo(currency, portfolio[currency])} {currency}</p>\r\n                    </div>\r\n                   \r\n                </div>\r\n            ))\r\n            }\r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Crypto\r\n\r\n\r\n\r\n","C:\\Users\\mopat\\dsav-363\\src\\Portfolio\\Portfolio.js",["64","65","66"],"import React, {useState} from 'react'\r\nimport Crypto from \"../Crypto/Crypto\"\r\nimport \"./Portfolio.css\"\r\nimport { connect } from 'react-redux'\r\nimport store from \".././Redux/index\"\r\nimport {auth, provider} from \"../firebase.js\"\r\n\r\n\r\n\r\nfunction Portfolio({username}) {\r\n    const [amount, setAmount] = useState(10000)\r\n    const [assets, setAssets] = useState({})\r\n    const [coinName, setCoinName] = useState(\"\")\r\n    const [coinAmount, setCoinAmount] = useState(0)\r\n    const [numberOfCoins, setNumberOfCoins] = useState(5)\r\n\r\n    function addCoin(){\r\n        if(amount - coinAmount < 0){\r\n            alert(\"Not enough funds remaining\")\r\n        }\r\n        if(numberOfCoins <= 0){\r\n            alert(\"You are only allowed a maximum of 5 coins. Please rebalance your portfolio if you wish to use your remaining cash.\")\r\n        }\r\n        else{\r\n            let name = coinName\r\n\r\n            setAssets({...assets, [name]: coinAmount}) \r\n           \r\n            setAmount(amount - coinAmount)\r\n            setNumberOfCoins(numberOfCoins - 1)\r\n          \r\n            setCoinName(\"\")\r\n            setCoinAmount(0)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = \"portfolio\">           \r\n            <h1><u className = \"title\">{username}'s Portfolio</u></h1>\r\n\r\n            <div className = \"add-coin\">\r\n                <p>Coins remaining: {numberOfCoins} </p>\r\n                <p>Funds remaining: {amount}</p>\r\n\r\n                <input type = \"text\" placeholder = \"Full coin name\" onChange = {(e) => setCoinName(e.target.value)}></input>\r\n                <input type = \"number\" placeholder = \"Amount in USD\" onChange = {(e) => setCoinAmount(e.target.value)}></input>\r\n                <button type = \"submit\" onClick = {addCoin}> Add coin </button>\r\n            </div>\r\n\r\n            <Crypto portfolio = {assets} />   \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    username: state.username,\r\n    userInfo: state.userInfo\r\n})\r\n\r\n\r\nexport default (connect)(mapStateToProps)(Portfolio)","C:\\Users\\mopat\\dsav-363\\src\\Investors\\Investor.js",["67"],"import React, {useEffect, useState} from 'react'\r\nimport \"./Investor.css\"\r\nimport Portfolio from \"../Portfolio/Portfolio\"\r\n\r\n\r\n\r\nfunction Investor() {\r\n    const [name, setName] = useState(\"\")\r\n    const [investors, setInvestors] = useState([\"Mo Patel\"])\r\n\r\n\r\n    function addInvestor(){\r\n        investors.length < 10 ? setInvestors([...investors, name]) : alert(\"Max players reached\")\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <label>Name: </label>\r\n            <input type = \"text\" placeholder = \"Name\" onChange = {(e) => setName(e.target.value)}></input>\r\n            <button type = \"submit\" onClick = {addInvestor}>Add user</button>\r\n            \r\n            {investors.map(investor => (\r\n                <div>\r\n                    <Portfolio name = {investor} />\r\n                </div>\r\n            ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Investor\r\n","C:\\Users\\mopat\\dsav-363\\src\\GameSession\\GameSession.js",[],"C:\\Users\\mopat\\dsav-363\\src\\Redux\\index.js",[],"C:\\Users\\mopat\\dsav-363\\src\\Login\\Login.js",["68","69"],"import React, {useState} from 'react'\r\nimport \"./Login.css\"\r\nimport { connect } from 'react-redux'\r\nimport store from \".././Redux/index\"\r\nimport {auth, provider, db} from \"../firebase.js\"\r\nimport firebase from \"firebase\"\r\n\r\n\r\nexport const Login = (props) => {\r\n    const [userInfo, updateUserInfo] = useState(null)\r\n    const [name, setName] = useState(store.getState().username)\r\n\r\n    const signIn = () => {\r\n        auth.setPersistence(firebase.auth.Auth.Persistence.SESSION)\r\n            .then(function() {\r\n                auth\r\n                .signInWithPopup(provider)\r\n                .then((result) =>{\r\n                    console.log(result)  \r\n                    updateUserInfo(result.user.displayName, result)\r\n                    store.dispatch({     // store user info in global state \r\n                        type: \"ADD_POST\",\r\n                        payload: {\r\n                            username: result.user.displayName,\r\n                            email: result.user.email,\r\n                            userInfo: result.user,\r\n                        } \r\n                    }) \r\n                    setName(result.user.displayName)\r\n                    \r\n                    var docRef = db.collection(\"users\").doc(result.user.email);\r\n                    // check if user credentials already exist. add new user data if they don't.\r\n                    docRef.get().then((doc) => {\r\n                        if (doc.exists) {\r\n                            console.log(\"Document data:\", doc.data());\r\n                        } else {\r\n                            // doc.data() will be undefined in this case\r\n                            console.log(\"No such document!\");\r\n                            db.collection(\"users\").doc(result.user.email).set({\r\n                                name: result.user.displayName,\r\n                                display_name: result.user.displayName,\r\n                                bio: `Hi, my name is ${result.user.displayName}!`,\r\n                                wins: 0,\r\n                                current_games: [],\r\n                                previous_games: [],\r\n                                games_won: []\r\n                            })\r\n                            .then(() => {\r\n                                console.log(\"Document successfully written!\")\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error(\"Error writing document: \", error)\r\n                            })\r\n                        }\r\n                    }).catch((error) => {\r\n                        console.log(\"Error getting document:\", error)\r\n                    })\r\n\r\n                })\r\n                .catch((error) => alert(error.message)) \r\n            })\r\n    }\r\n    \r\n    return (\r\n        <div className=\"background\">\r\n\r\n            <div className=\"body\">\r\n                <h1 className=\"header\">Fantasy Markets</h1>\r\n\r\n                <h4 className=\"slogan\">Strategize, Invest, and take your portfolio <em>to the moon!</em></h4>\r\n\r\n                <button className=\"google\" onClick={signIn}>Google</button>   \r\n            </div>\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    username: state.username,\r\n    userInfo: state.userInfo\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        dispatch\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n","C:\\Users\\mopat\\dsav-363\\src\\firebase.js",[],"C:\\Users\\mopat\\dsav-363\\src\\CreateGame\\CreateGame.js",["70"],"C:\\Users\\mopat\\dsav-363\\src\\Profile\\Profile.js",["71"],"import React, { useEffect, useState } from 'react'\r\nimport { db } from \"../firebase\"\r\nimport {connect} from \"react-redux\"\r\nimport \"./Profile.css\"\r\n\r\n\r\nfunction Profile({ email, userInfo }) {\r\n    const [name, setName] = useState(userInfo.displayName)\r\n    const [bio, setBio] = useState(`Hi, my name is ${userInfo.displayName}`)\r\n    const [wins, setWins] = useState(0)\r\n    const [totalGames, setTotalGames] = useState(0)\r\n\r\n    useEffect(() => {\r\n        var docRef = db.collection(\"users\").doc(email);\r\n\r\n        docRef.get().then((doc) => {\r\n            if (doc.exists) {\r\n                console.log(\"Document data:\", doc.data());\r\n                setName(doc.data().name)\r\n                setBio(doc.data().bio)\r\n                setWins(doc.data().wins)\r\n                setTotalGames(doc.data().previous_games.length)\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error)\r\n        })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div style = {{border: \"1px solid black\", width: \"fit-content\", padding: \"2rem\"}}>\r\n            <h3>{name}</h3>\r\n            <img className=\"profile-pic\" src={userInfo.photoURL} alt=\"Profile Pic\" />\r\n            <h3>Bio: {bio}</h3>\r\n            <h3>Wins: {wins}</h3>\r\n            <h3>Games Played: {totalGames}</h3>    \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    username: state.username,\r\n    email: state.email,\r\n    userInfo: state.userInfo\r\n  })\r\n  \r\n  export default connect(mapStateToProps)(Profile)\r\n  ","C:\\Users\\mopat\\dsav-363\\src\\FindGames\\FindGames.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":26,"nodeType":"78","messageId":"79","endLine":1,"endColumn":35},{"ruleId":"76","severity":1,"message":"80","line":1,"column":37,"nodeType":"78","messageId":"79","endLine":1,"endColumn":46},{"ruleId":"76","severity":1,"message":"81","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":13},{"ruleId":"76","severity":1,"message":"82","line":6,"column":9,"nodeType":"78","messageId":"79","endLine":6,"endColumn":13},{"ruleId":"76","severity":1,"message":"83","line":6,"column":15,"nodeType":"78","messageId":"79","endLine":6,"endColumn":23},{"ruleId":"76","severity":1,"message":"77","line":1,"column":16,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"84","line":10,"column":12,"nodeType":"78","messageId":"79","endLine":10,"endColumn":20},{"ruleId":"76","severity":1,"message":"85","line":11,"column":12,"nodeType":"78","messageId":"79","endLine":11,"endColumn":16},{"ruleId":"76","severity":1,"message":"86","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":16},{"ruleId":"87","severity":1,"message":"88","line":31,"column":8,"nodeType":"89","endLine":31,"endColumn":10,"suggestions":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'prevState' is defined but never used.","'store' is defined but never used.","'auth' is defined but never used.","'provider' is defined but never used.","'userInfo' is assigned a value but never used.","'name' is assigned a value but never used.","'firebase' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array.","ArrayExpression",["93"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [email]",{"range":"96","text":"97"},[1087,1089],"[email]"]