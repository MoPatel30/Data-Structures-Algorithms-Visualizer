[{"C:\\Users\\mopat\\dsav-363\\src\\index.js":"1","C:\\Users\\mopat\\dsav-363\\src\\App.js":"2","C:\\Users\\mopat\\dsav-363\\src\\reportWebVitals.js":"3","C:\\Users\\mopat\\dsav-363\\src\\Crypto\\Crypto.js":"4","C:\\Users\\mopat\\dsav-363\\src\\Portfolio\\Portfolio.js":"5","C:\\Users\\mopat\\dsav-363\\src\\Investors\\Investor.js":"6","C:\\Users\\mopat\\dsav-363\\src\\GameSession\\GameSession.js":"7","C:\\Users\\mopat\\dsav-363\\src\\Redux\\index.js":"8","C:\\Users\\mopat\\dsav-363\\src\\Login\\Login.js":"9","C:\\Users\\mopat\\dsav-363\\src\\firebase.js":"10","C:\\Users\\mopat\\dsav-363\\src\\CreateGame\\CreateGame.js":"11","C:\\Users\\mopat\\dsav-363\\src\\Profile\\Profile.js":"12","C:\\Users\\mopat\\dsav-363\\src\\FindGames\\FindGames.js":"13","C:\\Users\\mopat\\dsav-363\\src\\MyGames\\MyGames.js":"14"},{"size":581,"mtime":1614314983462,"results":"15","hashOfConfig":"16"},{"size":3769,"mtime":1615779062841,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1611697990428,"results":"18","hashOfConfig":"16"},{"size":1894,"mtime":1615340976833,"results":"19","hashOfConfig":"16"},{"size":2021,"mtime":1614659397559,"results":"20","hashOfConfig":"16"},{"size":892,"mtime":1613622241705,"results":"21","hashOfConfig":"16"},{"size":724,"mtime":1615350683598,"results":"22","hashOfConfig":"16"},{"size":509,"mtime":1615348798845,"results":"23","hashOfConfig":"16"},{"size":3483,"mtime":1615348776389,"results":"24","hashOfConfig":"16"},{"size":266,"mtime":1615779083278,"results":"25","hashOfConfig":"16"},{"size":3158,"mtime":1615777301457,"results":"26","hashOfConfig":"16"},{"size":1656,"mtime":1615350670269,"results":"27","hashOfConfig":"16"},{"size":3150,"mtime":1615775471504,"results":"28","hashOfConfig":"16"},{"size":1659,"mtime":1615779077515,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1v82fgt",{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\mopat\\dsav-363\\src\\index.js",[],["65","66"],"C:\\Users\\mopat\\dsav-363\\src\\App.js",["67","68","69","70","71"],"C:\\Users\\mopat\\dsav-363\\src\\reportWebVitals.js",[],"C:\\Users\\mopat\\dsav-363\\src\\Crypto\\Crypto.js",["72","73"],"import React, {useState, useEffect, prevState} from 'react'\r\nimport \"./Crypto.css\"\r\nconst rp = require('request-promise');\r\n\r\n\r\n\r\nfunction Crypto({portfolio}) {\r\n    const [price, setPrice] = useState(\"\")\r\n    //const [prices, setPrices] = useState([0])\r\n\r\n    function getCoinInfo(currency, amount){\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            uri: 'https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest',\r\n            qs: {\r\n              'slug': currency,\r\n            },\r\n            //3164df64-a813-4a8b-a580-b2e741064780\r\n            headers: {\r\n              'X-CMC_PRO_API_KEY': ''\r\n            },\r\n            json: true,\r\n            gzip: true\r\n          };\r\n          \r\n          rp(requestOptions).then(response => {\r\n            console.log('API call response:', response)\r\n            setPrice(String(response.data[Object.keys(response.data)[0]].quote.USD.price))\r\n            //setPrices([...prices, price])\r\n            return amount / price\r\n          }).catch((err) => {\r\n            console.log('API call error:', err.message)\r\n            return 0\r\n          })\r\n\r\n    }\r\n\r\n    /*\r\n        <input type = \"text\" placeholder=\"Enter currency name\" onChange = {(e) => setName(e.target.value)}></input>\r\n        <button type = \"submit\" onClick = {getCoinInfo}>Enter</button>\r\n            \r\n    */\r\n\r\n    return (\r\n        <div>\r\n           \r\n            {Object.keys(portfolio).map(currency => (\r\n                <div>\r\n                    <div className = \"coin-info\">\r\n                        <p>Name: {currency}</p>\r\n                        <p>Amount Invested: {portfolio[currency]} USD</p>\r\n                        <p>Current position: {getCoinInfo(currency, portfolio[currency])} {currency}</p>\r\n                    </div>\r\n                   \r\n                </div>\r\n            ))\r\n            }\r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Crypto\r\n\r\n\r\n\r\n","C:\\Users\\mopat\\dsav-363\\src\\Portfolio\\Portfolio.js",["74","75","76"],"import React, {useState} from 'react'\r\nimport Crypto from \"../Crypto/Crypto\"\r\nimport \"./Portfolio.css\"\r\nimport { connect } from 'react-redux'\r\nimport store from \".././Redux/index\"\r\nimport {auth, provider} from \"../firebase.js\"\r\n\r\n\r\n\r\nfunction Portfolio({username}) {\r\n    const [amount, setAmount] = useState(10000)\r\n    const [assets, setAssets] = useState({})\r\n    const [coinName, setCoinName] = useState(\"\")\r\n    const [coinAmount, setCoinAmount] = useState(0)\r\n    const [numberOfCoins, setNumberOfCoins] = useState(5)\r\n\r\n    function addCoin(){\r\n        if(amount - coinAmount < 0){\r\n            alert(\"Not enough funds remaining\")\r\n        }\r\n        if(numberOfCoins <= 0){\r\n            alert(\"You are only allowed a maximum of 5 coins. Please rebalance your portfolio if you wish to use your remaining cash.\")\r\n        }\r\n        else{\r\n            let name = coinName\r\n\r\n            setAssets({...assets, [name]: coinAmount}) \r\n           \r\n            setAmount(amount - coinAmount)\r\n            setNumberOfCoins(numberOfCoins - 1)\r\n          \r\n            setCoinName(\"\")\r\n            setCoinAmount(0)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = \"portfolio\">           \r\n            <h1><u className = \"title\">{username}'s Portfolio</u></h1>\r\n\r\n            <div className = \"add-coin\">\r\n                <p>Coins remaining: {numberOfCoins} </p>\r\n                <p>Funds remaining: {amount}</p>\r\n\r\n                <input type = \"text\" placeholder = \"Full coin name\" onChange = {(e) => setCoinName(e.target.value)}></input>\r\n                <input type = \"number\" placeholder = \"Amount in USD\" onChange = {(e) => setCoinAmount(e.target.value)}></input>\r\n                <button type = \"submit\" onClick = {addCoin}> Add coin </button>\r\n            </div>\r\n\r\n            <Crypto portfolio = {assets} />   \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    username: state.username,\r\n    userInfo: state.userInfo\r\n})\r\n\r\n\r\nexport default (connect)(mapStateToProps)(Portfolio)","C:\\Users\\mopat\\dsav-363\\src\\Investors\\Investor.js",["77"],"import React, {useEffect, useState} from 'react'\r\nimport \"./Investor.css\"\r\nimport Portfolio from \"../Portfolio/Portfolio\"\r\n\r\n\r\n\r\nfunction Investor() {\r\n    const [name, setName] = useState(\"\")\r\n    const [investors, setInvestors] = useState([\"Mo Patel\"])\r\n\r\n\r\n    function addInvestor(){\r\n        investors.length < 10 ? setInvestors([...investors, name]) : alert(\"Max players reached\")\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <label>Name: </label>\r\n            <input type = \"text\" placeholder = \"Name\" onChange = {(e) => setName(e.target.value)}></input>\r\n            <button type = \"submit\" onClick = {addInvestor}>Add user</button>\r\n            \r\n            {investors.map(investor => (\r\n                <div>\r\n                    <Portfolio name = {investor} />\r\n                </div>\r\n            ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Investor\r\n","C:\\Users\\mopat\\dsav-363\\src\\GameSession\\GameSession.js",[],"C:\\Users\\mopat\\dsav-363\\src\\Redux\\index.js",[],"C:\\Users\\mopat\\dsav-363\\src\\Login\\Login.js",["78","79"],"import React, {useState} from 'react'\r\nimport \"./Login.css\"\r\nimport { connect } from 'react-redux'\r\nimport store from \".././Redux/index\"\r\nimport {auth, provider, db} from \"../firebase.js\"\r\nimport firebase from \"firebase\"\r\n\r\n\r\nexport const Login = (props) => {\r\n    const [userInfo, updateUserInfo] = useState(null)\r\n    const [name, setName] = useState(store.getState().username)\r\n\r\n    const signIn = () => {\r\n        auth.setPersistence(firebase.auth.Auth.Persistence.SESSION)\r\n            .then(function() {\r\n                auth\r\n                .signInWithPopup(provider)\r\n                .then((result) =>{\r\n                    console.log(result)  \r\n                    updateUserInfo(result.user.displayName, result)\r\n                    store.dispatch({     // store user info in global state \r\n                        type: \"ADD_POST\",\r\n                        payload: {\r\n                            username: result.user.displayName,\r\n                            email: result.user.email,\r\n                            userInfo: result.user,\r\n                        } \r\n                    }) \r\n                    setName(result.user.displayName)\r\n                    \r\n                    var docRef = db.collection(\"users\").doc(result.user.email);\r\n                    // check if user credentials already exist. add new user data if they don't.\r\n                    docRef.get().then((doc) => {\r\n                        if (doc.exists) {\r\n                            console.log(\"Document data:\", doc.data());\r\n                        } else {\r\n                            // doc.data() will be undefined in this case\r\n                            console.log(\"No such document!\");\r\n                            db.collection(\"users\").doc(result.user.email).set({\r\n                                name: result.user.displayName,\r\n                                display_name: result.user.displayName,\r\n                                bio: `Hi, my name is ${result.user.displayName}!`,\r\n                                wins: 0,\r\n                                current_games: [],\r\n                                previous_games: [],\r\n                                games_won: []\r\n                            })\r\n                            .then(() => {\r\n                                console.log(\"Document successfully written!\")\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error(\"Error writing document: \", error)\r\n                            })\r\n                        }\r\n                    }).catch((error) => {\r\n                        console.log(\"Error getting document:\", error)\r\n                    })\r\n\r\n                })\r\n                .catch((error) => alert(error.message)) \r\n            })\r\n    }\r\n    \r\n    return (\r\n        <div className=\"background\">\r\n\r\n            <div className=\"body\">\r\n                <h1 className=\"header\">Fantasy Markets</h1>\r\n\r\n                <h4 className=\"slogan\">Strategize, Invest, and take your portfolio <em>to the moon!</em></h4>\r\n\r\n                <button className=\"google\" onClick={signIn}>Google</button>   \r\n            </div>\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    username: state.username,\r\n    userInfo: state.userInfo\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        dispatch\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n","C:\\Users\\mopat\\dsav-363\\src\\firebase.js",[],"C:\\Users\\mopat\\dsav-363\\src\\CreateGame\\CreateGame.js",["80"],"import React from 'react'\r\nimport \"./CreateGame.css\";\r\nimport { db } from \"../firebase\"\r\nimport store from \".././Redux/index\"\r\nimport firebase from \"firebase\"\r\n\r\n\r\nfunction CreateGame() {\r\n    const docRef = db.collection(\"current_games\")\r\n    const create = store.getState().userInfo.email\r\n    const userRef = db.collection(\"users\")\r\n\r\n    function createGame(e){\r\n        e.preventDefault()\r\n\r\n        const formData = new FormData(document.querySelector('form'))\r\n        let data = []\r\n        for (var pair of formData.entries()) {\r\n            data.push(pair[1])\r\n            console.log(pair[0] + ': ' + pair[1])\r\n        }\r\n        // firebase.firestore.FieldValue.serverTimestamp()\r\n        docRef.add({\r\n            name: data[0],\r\n            creator: create,\r\n            starting_amount: data[1],\r\n            duration: data[2],\r\n            start_date: new Date(Date.now()).toString(),\r\n            end_date: new Date(Date.now() + 12096e5).toString(),\r\n            max_players: data[3],\r\n            player_count: 1,\r\n            [create]: {cash: data[1]}\r\n        })\r\n        .then((doc) => {\r\n            console.log(\"Document successfully written!\", doc.id)\r\n            userRef.doc(create).update({\r\n               current_games: [doc.id]\r\n           })\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error writing document: \", error)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-style-5\">\r\n           <form id = \"form\">\r\n                <fieldset>\r\n                    <legend><span class=\"number\">$</span> Create A Game!</legend>\r\n                    <input id=\"name\" type=\"text\" name=\"field1\" placeholder=\"Name of Game\" />\r\n                    <input id=\"starting-amount\" type=\"number\" name=\"field2\" placeholder=\"Starting Amount of USD\" />\r\n                    \r\n                    <label for=\"job\">Duration of Game:</label>\r\n                    <select id=\"job\" name=\"field3\">\r\n\r\n                    <optgroup id=\"duration\" label=\"Weeks\">\r\n                        <option value=\"2\">1 Week</option>\r\n                        <option value=\"3\">2 Weeks</option>\r\n                    </optgroup>\r\n\r\n                    </select>    \r\n                    <label for=\"job\">Number of Investors:</label>\r\n\r\n                    <select id=\"max-players\" name=\"field4\">\r\n                        <optgroup label=\"Investors\">\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"4\">4</option>\r\n                            <option value=\"5\">5</option>\r\n                            <option value=\"6\">6</option>\r\n                            <option value=\"7\">7</option>\r\n                            <option value=\"8\">8</option>\r\n                            <option value=\"9\">9</option>\r\n                            <option value=\"10\">10</option>\r\n                        </optgroup>\r\n                    </select>      \r\n                </fieldset>\r\n                <button onClick={(e) => createGame(e)}> Start Game </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateGame","C:\\Users\\mopat\\dsav-363\\src\\Profile\\Profile.js",["81"],"import React, { useEffect, useState } from 'react'\r\nimport { db } from \"../firebase\"\r\nimport {connect} from \"react-redux\"\r\nimport \"./Profile.css\"\r\n\r\n\r\nfunction Profile({ email, userInfo }) {\r\n    const [name, setName] = useState(userInfo.displayName)\r\n    const [bio, setBio] = useState(`Hi, my name is ${userInfo.displayName}`)\r\n    const [wins, setWins] = useState(0)\r\n    const [totalGames, setTotalGames] = useState(0)\r\n\r\n    useEffect(() => {\r\n        var docRef = db.collection(\"users\").doc(email);\r\n\r\n        docRef.get().then((doc) => {\r\n            if (doc.exists) {\r\n                console.log(\"Document data:\", doc.data());\r\n                setName(doc.data().name)\r\n                setBio(doc.data().bio)\r\n                setWins(doc.data().wins)\r\n                setTotalGames(doc.data().previous_games.length)\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error)\r\n        })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div style = {{border: \"1px solid black\", width: \"fit-content\", padding: \"2rem\"}}>\r\n            <h3>{name}</h3>\r\n            <img className=\"profile-pic\" src={userInfo.photoURL} alt=\"Profile Pic\" />\r\n            <h3>Bio: {bio}</h3>\r\n            <h3>Wins: {wins}</h3>\r\n            <h3>Games Played: {totalGames}</h3>    \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    username: state.username,\r\n    email: state.email,\r\n    userInfo: state.userInfo\r\n  })\r\n  \r\n  export default connect(mapStateToProps)(Profile)\r\n  ","C:\\Users\\mopat\\dsav-363\\src\\FindGames\\FindGames.js",[],"C:\\Users\\mopat\\dsav-363\\src\\MyGames\\MyGames.js",["82"],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":11,"column":8,"nodeType":"89","messageId":"90","endLine":11,"endColumn":15},{"ruleId":"87","severity":1,"message":"91","line":20,"column":23,"nodeType":"89","messageId":"90","endLine":20,"endColumn":37},{"ruleId":"87","severity":1,"message":"92","line":26,"column":12,"nodeType":"89","messageId":"90","endLine":26,"endColumn":32},{"ruleId":"87","severity":1,"message":"93","line":30,"column":12,"nodeType":"89","messageId":"90","endLine":30,"endColumn":32},{"ruleId":"87","severity":1,"message":"94","line":34,"column":12,"nodeType":"89","messageId":"90","endLine":34,"endColumn":34},{"ruleId":"87","severity":1,"message":"95","line":1,"column":26,"nodeType":"89","messageId":"90","endLine":1,"endColumn":35},{"ruleId":"87","severity":1,"message":"96","line":1,"column":37,"nodeType":"89","messageId":"90","endLine":1,"endColumn":46},{"ruleId":"87","severity":1,"message":"97","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":13},{"ruleId":"87","severity":1,"message":"98","line":6,"column":9,"nodeType":"89","messageId":"90","endLine":6,"endColumn":13},{"ruleId":"87","severity":1,"message":"99","line":6,"column":15,"nodeType":"89","messageId":"90","endLine":6,"endColumn":23},{"ruleId":"87","severity":1,"message":"95","line":1,"column":16,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"100","line":10,"column":12,"nodeType":"89","messageId":"90","endLine":10,"endColumn":20},{"ruleId":"87","severity":1,"message":"101","line":11,"column":12,"nodeType":"89","messageId":"90","endLine":11,"endColumn":16},{"ruleId":"87","severity":1,"message":"102","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":31,"column":8,"nodeType":"105","endLine":31,"endColumn":10,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"107","line":20,"column":8,"nodeType":"105","endLine":20,"endColumn":10,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'MyGames' is defined but never used.","Identifier","unusedVar","'setMyFindGames' is assigned a value but never used.","'setProfileVisibility' is defined but never used.","'setMyGamesVisibility' is defined but never used.","'setFindGamesVisibility' is defined but never used.","'useEffect' is defined but never used.","'prevState' is defined but never used.","'store' is defined but never used.","'auth' is defined but never used.","'provider' is defined but never used.","'userInfo' is assigned a value but never used.","'name' is assigned a value but never used.","'firebase' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array.","ArrayExpression",["111"],"React Hook useEffect has a missing dependency: 'findMyGamesInfo'. Either include it or remove the dependency array.",["112"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [email]",{"range":"117","text":"118"},"Update the dependencies array to be: [findMyGamesInfo]",{"range":"119","text":"120"},[1087,1089],"[email]",[628,630],"[findMyGamesInfo]"]