[{"/Users/molarya/Downloads/COMP363PROJECT/src/index.js":"1","/Users/molarya/Downloads/COMP363PROJECT/src/reportWebVitals.js":"2","/Users/molarya/Downloads/COMP363PROJECT/src/App.js":"3","/Users/molarya/Downloads/COMP363PROJECT/src/Redux/index.js":"4","/Users/molarya/Downloads/COMP363PROJECT/src/Login/Login.js":"5","/Users/molarya/Downloads/COMP363PROJECT/src/GameSession/GameSession.js":"6","/Users/molarya/Downloads/COMP363PROJECT/src/Profile/Profile.js":"7","/Users/molarya/Downloads/COMP363PROJECT/src/CreateGame/CreateGame.js":"8","/Users/molarya/Downloads/COMP363PROJECT/src/Investors/Investor.js":"9","/Users/molarya/Downloads/COMP363PROJECT/src/test/test.js":"10","/Users/molarya/Downloads/COMP363PROJECT/src/MyGames/MyGames.js":"11","/Users/molarya/Downloads/COMP363PROJECT/src/FindGames/FindGames.js":"12","/Users/molarya/Downloads/COMP363PROJECT/src/Portfolio/Portfolio.js":"13","/Users/molarya/Downloads/COMP363PROJECT/src/firebase.js":"14","/Users/molarya/Downloads/COMP363PROJECT/src/GameModal/GameModal.js":"15"},{"size":581,"mtime":1616195497360,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1611773550866,"results":"18","hashOfConfig":"17"},{"size":2388,"mtime":1619213501192,"results":"19","hashOfConfig":"17"},{"size":694,"mtime":1619128753337,"results":"20","hashOfConfig":"17"},{"size":3834,"mtime":1619128753333,"results":"21","hashOfConfig":"17"},{"size":696,"mtime":1616195497340,"results":"22","hashOfConfig":"17"},{"size":3017,"mtime":1619213501211,"results":"23","hashOfConfig":"17"},{"size":3313,"mtime":1619213501197,"results":"24","hashOfConfig":"17"},{"size":900,"mtime":1618516195560,"results":"25","hashOfConfig":"17"},{"size":6220,"mtime":1617912392498,"results":"26","hashOfConfig":"17"},{"size":6088,"mtime":1619379517713,"results":"27","hashOfConfig":"17"},{"size":6434,"mtime":1619379519183,"results":"28","hashOfConfig":"17"},{"size":10333,"mtime":1619213501207,"results":"29","hashOfConfig":"17"},{"size":650,"mtime":1619379266567,"results":"30","hashOfConfig":"17"},{"size":9643,"mtime":1619213501203,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ga2wz9",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"55"},"/Users/molarya/Downloads/COMP363PROJECT/src/index.js",[],"/Users/molarya/Downloads/COMP363PROJECT/src/reportWebVitals.js",[],"/Users/molarya/Downloads/COMP363PROJECT/src/App.js",["66","67","68","69","70","71","72"],"/Users/molarya/Downloads/COMP363PROJECT/src/Redux/index.js",[],"/Users/molarya/Downloads/COMP363PROJECT/src/Login/Login.js",["73","74"],"/Users/molarya/Downloads/COMP363PROJECT/src/GameSession/GameSession.js",[],"/Users/molarya/Downloads/COMP363PROJECT/src/Profile/Profile.js",["75","76"],"/Users/molarya/Downloads/COMP363PROJECT/src/CreateGame/CreateGame.js",[],"/Users/molarya/Downloads/COMP363PROJECT/src/Investors/Investor.js",["77"],"/Users/molarya/Downloads/COMP363PROJECT/src/test/test.js",["78","79"],"/Users/molarya/Downloads/COMP363PROJECT/src/MyGames/MyGames.js",["80","81","82","83","84"],"import React, { useEffect, useState } from 'react'\nimport \"./MyGames.css\"\nimport { db } from \"../firebase\"\nimport store from \"../Redux/index\"\nimport GameModal from \"../GameModal/GameModal\"\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport firebase from \"firebase\"\n\nimport Select from \"react-select\";\n\n\nfunction MyGames() {\n    const [MyGameIds, setMyGameIds] = useState(store.getState().MyGames)\n    const [showGames, setShowGames] = useState([])\n    const [currentGames, setCurrentGames] = useState([])\n    const [open, setOpen] = useState(false);\n    const [modalGameInfo, setModalGameInfo] = useState(null)\n    const [search, setSearch] = useState(\"\");\n    const [filteredGame, setFilteredGame] = useState([])\n\n    const [unfiltered, setUnfiltered] = useState([]) // testing\n<<<<<<< HEAD\n=======\n    const [isFiltered, setIsFiltered] = useState(false) // testing\n>>>>>>> 8f263e8dea6bf8bd2d7513ed526b0f2759cd4cee\n    const [currentFilter, setCurrentFilter] = useState() // testing\n    const filters = [\n        { label: \"Choose a Filter\", value: 0 },\n        { label: \"Starting Cash (High to Low)\", value: 1 },\n        { label: \"Starting Cash (Low to High)\", value: 2 },\n        { label: \"Player Count (High to Low)\", value: 3 },\n        { label: \"Player Count (Low to High)\", value: 4 }\n    ];\n\n\n    const handleClickOpen = (instance) => {\n      setOpen(true)\n      setModalGameInfo(instance)\n    }\n  \n    const handleClose = () => {\n      setOpen(false)\n    }\n\n    function getGames() {\n        db.collection('current_games').onSnapshot(snapshot => {          \n            setShowGames(snapshot.docs.map(doc => doc))         \n        }) \n    }\n\n    useEffect(() => { \n        getGames()\n    }, [])\n\n    useEffect(() => {    \n        setFilteredGame(\n            showGames.filter(game => MyGameIds.indexOf(game.id) !== -1).filter((game) =>\n            game.data().name.toLowerCase().includes(search.toLowerCase())\n          )\n        )\n\n<<<<<<< HEAD\n        setUnfiltered(filteredGame)\n\n    }, [search, showGames]);\n\n    const quicksort = (array, l, h, filter) => {\n\n        var p\n\n        if((h - l) > 0){\n            p = split(array, l, h, filter)\n            quicksort(array, l, p-1, filter)\n            quicksort(array, p+1, h, filter)\n        }\n\n        if(filter === 1 || filter === 3){\n            return (array.reverse())\n        }\n        return (array)\n    }\n\n    const split = (array, l, h, filter) => {\n        var p = h\n        var initialHigh = l\n\n        for(var i = l; i < h; i++){\n            if(filter === 1 || filter === 2){\n                if(array[i].data().starting_amount < array[p].data().starting_amount){\n                    [array[i], array[initialHigh]] = [array[initialHigh], array[i]]\n                    initialHigh++\n                }\n            }\n            if(filter === 3 || filter === 4){\n                if(array[i].data().player_count < array[p].data().player_count){\n                    [array[i], array[initialHigh]] = [array[initialHigh], array[i]]\n                    initialHigh++\n                }\n            }\n        }\n\n        [array[p], array[initialHigh]] = [array[initialHigh], array[p]]\n\n        return (initialHigh)\n    }\n\n    const setFilter = e => {\n\n        setCurrentFilter(e.value)\n        \n        //\"Choose a Filter\"\n        if(e.value === 0){\n            setFilteredGame(unfiltered)\n        }\n        // Filters based on option\n        if(e.value !== 0){\n            setFilteredGame(quicksort(filteredGame, 0, filteredGame.length - 1, e.value))\n        }\n=======\n    }, [search, showGames]);\n\n    const setFilter = e => {\n        setCurrentFilter(e.value)\n        var toSort = filteredGame.map((game) => {\n            return game\n        })\n        if(!isFiltered){\n            setUnfiltered(toSort);\n            setIsFiltered(true)\n        }\n        //\"Choose a Filter\"\n        if(e.value === 0){\n            toSort = unfiltered.map((game) => {\n                return game\n            })\n            setIsFiltered(false)\n            console.log(\"filter\")\n        }\n        //\"Starting Cash (High to Low)\"\n        if(e.value === 1){\n            toSort.sort((a,b) => b.data().starting_amount - a.data().starting_amount)\n        }\n        //\"Starting Cash (Low to High)\"\n        if(e.value === 2){\n            toSort.sort((a,b) => a.data().starting_amount - b.data().starting_amount)\n        }\n        //\"Player Count (High to Low)\"\n        if(e.value === 3){\n            toSort.sort((a,b) => b.data().player_count - a.data().player_count)\n        }\n        //\"Player Count (Low to High)\"\n        if(e.value === 4){\n            toSort.sort((a,b) => a.data().player_count - b.data().player_count)\n        }\n        setFilteredGame(toSort)\n>>>>>>> 8f263e8dea6bf8bd2d7513ed526b0f2759cd4cee\n    }\n\n    return (\n        <div>\n            <div className=\"searchbar\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Search for a Game\"\n                    onChange={(e) => setSearch(e.target.value)}\n                />\n                <i className=\"fas fa-search\" id=\"searchGlass\"></i>\n            </div>\n\n            <div className = \"filter-menu\">\n                <Select \n                    placeholder = \"Choose a Filter\" \n                    value={filters.filter(obj => obj.value === currentFilter)}\n                    options={filters} \n                    onChange={setFilter}\n                />\n            </div>\n\n            <div id = \"game-style\">\n            {filteredGame.length === 0 ? (\n                <p style={{color: \"white\"}}>Head over to \"Find Games\" to join an upcoming game session!</p>\n            ) : (\n            filteredGame.map((instance) => (\n                <div>\n                    <div onClick={() => handleClickOpen(instance)} className=\"flip-card\">\n                        <div className=\"flip-card-inner\">\n                            <div className=\"flip-card-front\">  \n                                <div id=\"spanner\">\n                                    <h2><u>{instance.data().name}</u></h2>\n                                </div>\n\n                                <div id=\"non-spanner\">\n                                    <h3>Starting Amount: {instance.data().starting_amount} USD</h3>\n                                    <h3>Duration: {instance.data().duration - 1} {instance.data().duration - 1 === 1 ? `week`: `weeks`}</h3>\n                                    <h3>Start date:  {String(new Date(instance.data().end_date)).substring(0,16)}</h3>\n                                </div>\n\n                                <div id=\"spanner\">                                 \n                                    <h3>Players: {instance.data().player_count} / {instance.data().max_players}</h3>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>      \n            )))\n            } \n        </div>  \n\n        <Dialog style = {{maxWidth: \"100%\"}} fullScreen open = {open}>\n            <Toolbar style = {{maxWidth: \"90%\"}}> \n                <IconButton edge=\"start\" color=\"black\" onClick={handleClose} aria-label=\"close\">\n                    <p>Go Back </p>\n                </IconButton>\n            </Toolbar>\n            <GameModal gameInfo={modalGameInfo} />\n        </Dialog> \n    </div>\n    )\n}\n\n\nexport default MyGames\n",["85","86"],"/Users/molarya/Downloads/COMP363PROJECT/src/FindGames/FindGames.js",["87"],"import React, { useState, useEffect } from 'react'\nimport \"./FindGames.css\"\nimport { db } from \"../firebase\"\nimport store from \"../Redux/index\"\nimport firebase from \"firebase\"\nimport GameModal from \"../GameModal/GameModal\"\nimport IconButton from '@material-ui/core/IconButton';\n//import CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Select from \"react-select\";\nimport { partition } from 'd3'\n\n\n\nfunction FindGames() {\n    const [games, setGames] = useState([])\n    const [filteredGame, setFilteredGame] = useState([])\n\n    const [open, setOpen] = useState(false);\n    const [modalGameInfo, setModalGameInfo] = useState(null)\n    const [search, setSearch] = useState(\"\");\n\n    const [unfiltered, setUnfiltered] = useState([]) // testing\n    const [currentFilter, setCurrentFilter] = useState() // testing\n    const filters = [\n        { label: \"Choose a Filter\", value: 0 },\n        { label: \"Starting Cash (High to Low)\", value: 1 },\n        { label: \"Starting Cash (Low to High)\", value: 2 },\n        { label: \"Player Count (High to Low)\", value: 3 },\n        { label: \"Player Count (Low to High)\", value: 4 }\n    ];\n\n\n    const handleClickOpen = (instance) => {\n      setOpen(true)\n      setModalGameInfo(instance)\n    }\n  \n    const handleClose = () => {\n      setOpen(false)\n    }\n    \n    useEffect(() => { \n        db.collection('joinable_games').onSnapshot(snapshot => {          \n            setGames(snapshot.docs.map(doc => doc))  \n        })\n    }, [])\n    \n    useEffect(() => {\n        setFilteredGame(\n          games.filter((game) =>\n            game.data().name.toLowerCase().includes(search.toLowerCase())\n          )\n        )\n\n        setUnfiltered(filteredGame)\n\n      }, [search, games]);\n\n    const quicksort = (array, l, h, filter) => {\n\n        var p\n\n        if((h - l) > 0){\n            p = split(array, l, h, filter)\n            quicksort(array, l, p-1, filter)\n            quicksort(array, p+1, h, filter)\n        }\n\n        if(filter === 1 || filter === 3){\n            return (array.reverse())\n        }\n        return (array)\n    }\n\n    const split = (array, l, h, filter) => {\n        var p = h\n        var initialHigh = l\n\n        for(var i = l; i < h; i++){\n            if(filter === 1 || filter === 2){\n                if(array[i].data().starting_amount < array[p].data().starting_amount){\n                    [array[i], array[initialHigh]] = [array[initialHigh], array[i]]\n                    initialHigh++\n                }\n            }\n            if(filter === 3 || filter === 4){\n                if(array[i].data().player_count < array[p].data().player_count){\n                    [array[i], array[initialHigh]] = [array[initialHigh], array[i]]\n                    initialHigh++\n                }\n            }\n        }\n\n        [array[p], array[initialHigh]] = [array[initialHigh], array[p]]\n\n        return (initialHigh)\n    }\n\n    const setFilter = e => {\n\n        setCurrentFilter(e.value)\n        \n        //\"Choose a Filter\"\n        if(e.value === 0){\n            setFilteredGame(unfiltered)\n        }\n        // Filters based on option\n        if(e.value !== 0){\n            setFilteredGame(quicksort(filteredGame, 0, filteredGame.length - 1, e.value))\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"searchbar\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Search for a Game\"\n                    onChange={(e) => setSearch(e.target.value)}\n                />\n                <i className=\"fas fa-search\" id=\"searchGlass\"></i>\n            </div>\n\n            <div className = \"filter-menu\">\n                <Select \n                    placeholder = \"Choose a Filter\" \n                    value={filters.filter(obj => obj.value === currentFilter)}\n                    options={filters} \n                    onChange={setFilter}\n                />\n            </div>\n\n            <div id = \"game-style\">\n                {filteredGame.length === 0 ? (\n                    <p style={{color: \"white\"}}>No new games found. Head over to \"Create a Game\" to create a new game session!</p>\n                ) : (\n                filteredGame.map((instance) => (\n                    <div>\n                        <div onClick={() => handleClickOpen(instance)} className=\"flip-card\">                   \n                            <div id=\"spanner\">\n                                <h2><u>{instance.data().name}</u></h2>\n                                <h3>Created By: {instance.data().creator}</h3>\n                            </div>\n                            <br />\n                            <div id=\"Midspanner\">                                 \n                                <h3>{instance.data().player_count} / {instance.data().max_players} <br /> Players</h3>\n                            </div>\n                            <br />\n                            <div id=\"non-spanner\">\n                                <h3>Starting Amount: {instance.data().starting_amount} USD</h3>\n                                <h3>Start date: {String(new Date(instance.data().start_date)).substring(0,16)}</h3>\n                            </div>\n                    \n                            {/* <div id=\"non-spanner\">\n                                <h3>Start date: {instance.data().start_date}</h3>\n                                <h3>End date: {instance.data().end_date}</h3>\n                            </div> */}\n\n                            <div id=\"spanner\">                                 \n                                <h3>Players: {instance.data().players.length} / {instance.data().max_players}</h3>\n                            </div>\n\n                            {/* <h3 id = \"id\" value = {`${instance.id}`}>{instance.id}</h3> */}   \n                        </div>\n                    </div>      \n                )))\n                } \n            </div>  \n\n            <Dialog style = {{maxWidth: \"100%\"}} fullScreen open = {open}>\n                <Toolbar style = {{maxWidth: \"90%\"}}> \n                    <IconButton edge=\"start\" color=\"black\" onClick={handleClose} aria-label=\"close\">\n                        <p>Go Back </p>\n                    </IconButton>\n                </Toolbar>\n                <GameModal gameInfo={modalGameInfo} />\n            </Dialog> \n        </div>\n    )\n}\n\nexport default FindGames","/Users/molarya/Downloads/COMP363PROJECT/src/Portfolio/Portfolio.js",["88"],"/Users/molarya/Downloads/COMP363PROJECT/src/firebase.js",[],"/Users/molarya/Downloads/COMP363PROJECT/src/GameModal/GameModal.js",["89","90"],"import React, {useEffect, useState} from 'react'\nimport firebase from \"firebase\"\nimport { db } from \"../firebase\"\nimport store from \"../Redux/index\"\nimport \"./GameModal.css\"\nimport EditPortfolio, { ViewPortfolio } from \"../Portfolio/Portfolio\"\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\n\n\n\nfunction GameModal({ gameInfo }) {\n    const [Portfolio, setPortfolio] = useState()\n    const [players, setPlayers] = useState([])\n    const [leaderboard, setLeaderboard] = useState([])\n    const [Tokens, setTokens] = useState([])\n    const [view, setView] = useState(false)\n    const [editPort, setEditPort] = useState(false)\n    const [currentTime, setCurrentTime] = useState(Math.round(new Date().getTime()))\n    const [days, setDays] = useState(\"\")\n    const [hours, setHours] = useState(\"23\")\n    const [minutes, setMinutes] = useState(\"59\")\n    const [seconds, setSeconds] = useState(\"59\")\n\n    useEffect(() => {\n        gameInfo.data().players.forEach((player) => {\n            console.log(player)\n            console.log(gameInfo.data()[player].total)\n            setLeaderboard( [...leaderboard, {[player] : gameInfo.data()[player].total}] )\n        })\n        setPlayers(gameInfo.data().players)\n    }, [])\n    \n    function joinGameSession(e){\n        e.preventDefault()\n        if(!gameInfo.data()[store.getState().username]){\n            db.collection(\"current_games\").doc(e.target.value).update({\n                player_count: firebase.firestore.FieldValue.increment(1),\n                [store.getState().username]: {cash: Number(gameInfo.data().starting_amount), canEdit: true},\n                players: firebase.firestore.FieldValue.arrayUnion( store.getState().username )\n            })  \n            db.collection(\"users\").doc(store.getState().username).update({\n                current_games: firebase.firestore.FieldValue.arrayUnion(e.target.value)\n            })\n            store.dispatch({ // store user info in global state \n                type: \"UPDATE_GAMES\",\n                payload: {\n                    MyGames: [...store.getState().username, e.target.value]        \n                } \n            }) \n        }\n    }\n\n    function displayEditPortfolio(username, portfolio){\n        setEditPort(true)\n        setPortfolio(<EditPortfolio username={username} gameId={gameInfo.id} portfolio={portfolio} />)\n    }\n\n    const [dailyCoinPrices, setDailyCoinPrices] = useState({})\n    function displayViewPortfolio(username, portfolio){\n        db.collection('coin_prices').onSnapshot(snapshot => {  \n            snapshot.docs.map(doc => (\n                setDailyCoinPrices({...dailyCoinPrices, [doc.id] : Number(doc.data().value)})  \n            )) \n        })     \n   \n        setTokens(\n            Object.keys(portfolio).map((coin) => ( coin ))     \n        )\n\n        setTimeout(() => {}, 2000)\n\n        console.log(Tokens)\n        setView(true)\n        setPortfolio(<ViewPortfolio username={username} portfolio={portfolio} tokens={Tokens} />)\n    }\n\n    const viewClose = () => {\n        setView(false)\n    }\n\n    const editPortClose = () => {\n        setEditPort(false)\n    }\n\n    useEffect(() => {\n        let startTime = gameInfo.data().start_date\n        let endTime = gameInfo.data().end_date\n        if(startTime > currentTime){\n            setCurrentTime(Math.round(new Date().getTime()))\n      \n            let timer = (startTime - currentTime) / 1000\n\n            let d = Math.floor(timer / 86400)\n            let h = Math.floor(timer / 3600)\n            let m = Math.floor(timer % 3600 / 60)\n            let s = Math.floor(timer % 3600 % 60)  \n\n            setDays(d > 0 ? d + (d === 1 ? \" day\" : \" days\") : \"\")\n            setHours(h > 0 ? h + (h === 1 ? \" hour\" : \" hours\") : \"\")\n            setMinutes(m > 0 ? m + (m === 1 ? \" minute\" : \" minutes\") : \"\")\n            setSeconds(s > 0 ? s + (s === 1 ? \" second\" : \" seconds\") : \"\")\n        }\n        else {\n            setCurrentTime(Math.round(new Date().getTime()))\n\n            let timer = (endTime - currentTime) / 1000\n\n            let d = Math.floor(timer / 86400)\n            let h = Math.floor(timer % 86400 / 3600)\n            let m = Math.floor(timer % 86400 % 3600 / 60)\n            let s = Math.floor(timer % 86400 % 3600 % 60)\n        \n            setDays(d > 0 ? d + (d === 1 ? \" day\" : \" days\") : \"\")\n            setHours(h > 0 ? h + (h === 1 ? \" hour\" : \" hours\") : \"\")\n            setMinutes(m > 0 ? m + (m === 1 ? \" minute\" : \" minutes\") : \"\")\n            setSeconds(s > 0 ? s + (s === 1 ? \" second\" : \" seconds\") : \"\")\n        }\n    }, [])\n   \n    return (\n        <div id = \"info\">\n            <div id=\"game-info\">\n                <div className = \"game-information\">\n                    <h2><u>Game Information:</u></h2>\n                    <h3>Starting Amount: {gameInfo.data().starting_amount} USD</h3>\n                    <br/>\n                    <br/>\n                    <h3 id= \"number\">{gameInfo.data().player_count} / {gameInfo.data().max_players} <br /> Players</h3>\n                    <br/>\n                    <br />\n\n                    <h3>Duration: {gameInfo.data().duration} {gameInfo.data().duration === 1 ? `week`: `weeks`}</h3>\n                    <br/>\n                    <h3>Start date:<br/>{String(new Date(gameInfo.data().start_date)).substring(0,16)}</h3>\n                    <br/>\n                    <h3>End date: <br/>{String(new Date(gameInfo.data().end_date)).substring(0,16)}</h3>\n                    <br />\n                    {days !== \"\" ? (\n                        <h3>Countdown: {days}: {hours}: {minutes}: {seconds}</h3>\n                    ) : (\n                        <h3>Countdown: {hours}: {minutes}: {seconds}</h3>\n                    )}\n\n                    {gameInfo.data().players.indexOf(store.getState().username) === -1 && gameInfo.data().player_count < gameInfo.data().max_players ? (\n                        <div>\n                            <button id=\"gameId\" value={`${gameInfo.id}`} onClick={(e) => {joinGameSession(e)}}>Enter Game</button> \n                        </div>\n                    ): (\n                        <p></p>\n                    )\n                    }\n                </div>\n            </div>\n\n            <div id=\"game-players\">\n                <div id=\"game-name-creator\">\n                    <h1><u>{gameInfo.data().name}</u></h1>\n                    <h3>Created by {gameInfo.data().creator}</h3>\n                </div>\n        \n                {new Date().getTime() > gameInfo.data().start_date ? (\n                    <h2>Leaderboard</h2>\n                ) : (\n                    <h2>Current Players:</h2>\n                )\n                }\n                {players ? (\n                    console.log(players),\n                    players.map((player) => (\n                        <div id=\"leaderboard\">\n                            <span> {gameInfo.data().players.indexOf(player) + 1}.) </span>                 \n                            <span>{player}</span>\n                           \n                            <span id=\"portfolio-btns\">\n                                {store.getState().username === player && gameInfo.data()[player][\"canEdit\"] ? (\n                                    <span>\n                                        <span onClick={() => {displayEditPortfolio(player, gameInfo.data()[player])}} className=\"edit-portfolio-btn\"><u>Edit Portfolio</u></span>\n                                        <span onClick={() => {displayViewPortfolio(player, gameInfo.data()[player])}} className=\"view-portfolio-btn\"><u>View Portfolio</u></span>\n                                    </span>\n                                    ) : (\n                                        <span onClick={() => {displayViewPortfolio(player, gameInfo.data()[player])}} className=\"view-portfolio-btn\"><u>View Portfolio</u></span>\n                                    )\n                                }\n                            </span>            \n                        </div>\n                    ))\n                ): (\n                    <p>No Players Found</p>\n                )\n                }\n                </div>\n\n            <div className = \"rules\">\n                <h1>General Rules</h1>\n                <h3>1.) Don't refer to other user's portfolios as a means to make real life financial investments. Not that any of you would...</h3>\n                <h3>2.) Don't try to exploit any bugs you come across. Have some integrity. Reach out to us explaining the bug.</h3>\n                <h3>3.) You only get to finalize your portfolio once. Do your research, correctly input your investments, and hit \"Submit\". </h3>\n                <h3>4.) To reiterate, do NOT make any real life financial decisions based on the results/outcomes of these games. Seriously.</h3>\n                <h3>5.) Relax and have fun with it :)</h3>\n            </div>\n\n            {/* The Modal for Viewing your Portfolio */}\n            <Dialog fullWidth maxWidth={'sm'} open = {view}>\n                <IconButton edge=\"start\" color=\"black\" onClick={viewClose} aria-label=\"close\">\n                    <p>Close</p>\n                </IconButton>\n                <div>{Portfolio}</div>\n            </Dialog>\n\n                {/* The Modal for Creating Your Portfolio */}\n            <Dialog fullWidth maxWidth={'md'} open = {editPort}>\n                <IconButton edge=\"start\" color=\"black\" onClick={editPortClose} aria-label=\"close\">\n                    <p>Close</p>\n                </IconButton>\n                <div>{Portfolio}</div>\n            </Dialog>\n        </div>\n      \n    )\n}\n\nexport default GameModal\n",{"ruleId":"91","severity":1,"message":"92","line":1,"column":16,"nodeType":"93","messageId":"94","endLine":1,"endColumn":24},{"ruleId":"91","severity":1,"message":"95","line":1,"column":26,"nodeType":"93","messageId":"94","endLine":1,"endColumn":35},{"ruleId":"91","severity":1,"message":"96","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":16},{"ruleId":"91","severity":1,"message":"97","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":19},{"ruleId":"91","severity":1,"message":"98","line":13,"column":8,"nodeType":"93","messageId":"94","endLine":13,"endColumn":12},{"ruleId":"91","severity":1,"message":"99","line":14,"column":8,"nodeType":"93","messageId":"94","endLine":14,"endColumn":17},{"ruleId":"100","severity":1,"message":"101","line":39,"column":19,"nodeType":"102","endLine":39,"endColumn":22},{"ruleId":"91","severity":1,"message":"95","line":1,"column":26,"nodeType":"93","messageId":"94","endLine":1,"endColumn":35},{"ruleId":"91","severity":1,"message":"103","line":10,"column":12,"nodeType":"93","messageId":"94","endLine":10,"endColumn":20},{"ruleId":"91","severity":1,"message":"104","line":14,"column":26,"nodeType":"93","messageId":"94","endLine":14,"endColumn":41},{"ruleId":"105","severity":1,"message":"106","line":54,"column":8,"nodeType":"107","endLine":54,"endColumn":10,"suggestions":"108"},{"ruleId":"91","severity":1,"message":"95","line":1,"column":16,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":11,"column":41,"nodeType":"102","endLine":11,"endColumn":149},{"ruleId":"109","severity":1,"message":"110","line":14,"column":31,"nodeType":"102","endLine":14,"endColumn":108},{"ruleId":"91","severity":1,"message":"111","line":9,"column":8,"nodeType":"93","messageId":"94","endLine":9,"endColumn":16},{"ruleId":"91","severity":1,"message":"112","line":15,"column":23,"nodeType":"93","messageId":"94","endLine":15,"endColumn":35},{"ruleId":"91","severity":1,"message":"113","line":17,"column":12,"nodeType":"93","messageId":"94","endLine":17,"endColumn":24},{"ruleId":"91","severity":1,"message":"104","line":17,"column":26,"nodeType":"93","messageId":"94","endLine":17,"endColumn":41},{"ruleId":"105","severity":1,"message":"114","line":62,"column":8,"nodeType":"107","endLine":62,"endColumn":27,"suggestions":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":null,"fatal":true,"severity":2,"message":"120","line":13,"column":2},{"ruleId":"91","severity":1,"message":"121","line":7,"column":13,"nodeType":"93","messageId":"94","endLine":7,"endColumn":15},{"ruleId":"105","severity":1,"message":"122","line":32,"column":8,"nodeType":"107","endLine":32,"endColumn":10,"suggestions":"123"},{"ruleId":"105","severity":1,"message":"124","line":119,"column":8,"nodeType":"107","endLine":119,"endColumn":10,"suggestions":"125"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Investor' is defined but never used.","'GameSession' is defined but never used.","'Test' is defined but never used.","'Portfolio' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'userInfo' is assigned a value but never used.","'setCurrentGames' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.","ArrayExpression",["126"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'firebase' is defined but never used.","'setMyGameIds' is assigned a value but never used.","'currentGames' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'MyGameIds' and 'filteredGame'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setUnfiltered' needs the current value of 'filteredGame'.",["127"],"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 11 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mSelect\u001b[39m from \u001b[32m\"react-select\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m\u001b[36mimport\u001b[39m { partition } from \u001b[32m'd3'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m\u001b[33m===\u001b[39m\u001b[33m===\u001b[39m\u001b[33m=\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m\u001b[33m>>>\u001b[39m\u001b[33m>>>\u001b[39m\u001b[33m>\u001b[39m \u001b[35m8\u001b[39mf263e8dea6bf8bd2d7513ed526b0f2759cd4cee\u001b[0m","'d3' is defined but never used.","React Hook useEffect has missing dependencies: 'gameInfo' and 'leaderboard'. Either include them or remove the dependency array. If 'setPlayers' needs the current value of 'gameInfo', you can also switch to useReducer instead of useState and read 'gameInfo' in the reducer.",["130"],"React Hook useEffect has missing dependencies: 'currentTime' and 'gameInfo'. Either include them or remove the dependency array.",["131"],{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [username]",{"range":"140","text":"141"},"Update the dependencies array to be: [MyGameIds, filteredGame, search, showGames]",{"range":"142","text":"143"},"Update the dependencies array to be: [gameInfo, leaderboard]",{"range":"144","text":"145"},"Update the dependencies array to be: [currentTime, gameInfo]",{"range":"146","text":"147"},[1701,1703],"[username]",[1955,1974],"[MyGameIds, filteredGame, search, showGames]",[1262,1264],"[gameInfo, leaderboard]",[4597,4599],"[currentTime, gameInfo]"]